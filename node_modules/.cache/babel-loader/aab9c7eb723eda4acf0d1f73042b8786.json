{"ast":null,"code":"import _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport { useFloating, shift, getOverflowAncestors } from '@floating-ui/react';\nfunction useFloatingTooltip(_ref) {\n  var offset = _ref.offset,\n    position = _ref.position;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    opened = _useState2[0],\n    setOpened = _useState2[1];\n  var boundaryRef = useRef();\n  var _useFloating = useFloating({\n      placement: position,\n      middleware: [shift({\n        crossAxis: true,\n        padding: 5,\n        rootBoundary: \"document\"\n      })]\n    }),\n    x = _useFloating.x,\n    y = _useFloating.y,\n    reference = _useFloating.reference,\n    floating = _useFloating.floating,\n    refs = _useFloating.refs,\n    update = _useFloating.update,\n    placement = _useFloating.placement;\n  var horizontalOffset = placement.includes(\"right\") ? offset : position.includes(\"left\") ? offset * -1 : 0;\n  var verticalOffset = placement.includes(\"bottom\") ? offset : position.includes(\"top\") ? offset * -1 : 0;\n  var handleMouseMove = useCallback(function (_ref2) {\n    var clientX = _ref2.clientX,\n      clientY = _ref2.clientY;\n    reference({\n      getBoundingClientRect: function getBoundingClientRect() {\n        return {\n          width: 0,\n          height: 0,\n          x: clientX,\n          y: clientY,\n          left: clientX + horizontalOffset,\n          top: clientY + verticalOffset,\n          right: clientX,\n          bottom: clientY\n        };\n      }\n    });\n  }, [reference]);\n  useEffect(function () {\n    if (refs.floating.current) {\n      var boundary = boundaryRef.current;\n      boundary.addEventListener(\"mousemove\", handleMouseMove);\n      var parents = getOverflowAncestors(refs.floating.current);\n      parents.forEach(function (parent) {\n        parent.addEventListener(\"scroll\", update);\n      });\n      return function () {\n        boundary.removeEventListener(\"mousemove\", handleMouseMove);\n        parents.forEach(function (parent) {\n          parent.removeEventListener(\"scroll\", update);\n        });\n      };\n    }\n    return void 0;\n  }, [reference, refs.floating.current, update, handleMouseMove, opened]);\n  return {\n    handleMouseMove: handleMouseMove,\n    x: x,\n    y: y,\n    opened: opened,\n    setOpened: setOpened,\n    boundaryRef: boundaryRef,\n    floating: floating\n  };\n}\nexport { useFloatingTooltip };","map":null,"metadata":{},"sourceType":"module"}