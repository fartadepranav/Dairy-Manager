{"ast":null,"code":"import _slicedToArray from \"F:/Dairy Project/dairy_management/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useRef, useEffect } from 'react';\nfunction useInterval(fn, interval) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    active = _useState2[0],\n    setActive = _useState2[1];\n  var intervalRef = useRef();\n  var fnRef = useRef();\n  useEffect(function () {\n    fnRef.current = fn;\n  }, [fn]);\n  var start = function start() {\n    setActive(function (old) {\n      if (!old && !intervalRef.current) {\n        intervalRef.current = window.setInterval(fnRef.current, interval);\n      }\n      return true;\n    });\n  };\n  var stop = function stop() {\n    setActive(false);\n    window.clearInterval(intervalRef.current);\n    intervalRef.current = void 0;\n  };\n  var toggle = function toggle() {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  };\n  return {\n    start: start,\n    stop: stop,\n    toggle: toggle,\n    active: active\n  };\n}\nexport { useInterval };","map":{"version":3,"names":["useInterval","fn","interval","_useState","useState","_useState2","_slicedToArray","active","setActive","intervalRef","useRef","fnRef","useEffect","current","start","old","window","setInterval","stop","clearInterval","toggle"],"sources":["F:\\Dairy Project\\dairy_management\\node_modules\\@mantine\\hooks\\src\\use-interval\\use-interval.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport function useInterval(fn: () => void, interval: number) {\n  const [active, setActive] = useState(false);\n  const intervalRef = useRef<number>();\n  const fnRef = useRef<() => void>();\n\n  useEffect(() => {\n    fnRef.current = fn;\n  }, [fn]);\n\n  const start = () => {\n    setActive((old) => {\n      if (!old && !intervalRef.current) {\n        intervalRef.current = window.setInterval(fnRef.current, interval);\n      }\n      return true;\n    });\n  };\n\n  const stop = () => {\n    setActive(false);\n    window.clearInterval(intervalRef.current);\n    intervalRef.current = undefined;\n  };\n\n  const toggle = () => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  };\n\n  return { start, stop, toggle, active };\n}\n"],"mappings":";;AACO,SAASA,WAAWA,CAACC,EAAE,EAAEC,QAAQ,EAAE;EACxC,IAAAC,SAAA,GAA4BC,QAAQ,CAAC,KAAK,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAApCI,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAMI,WAAW,GAAGC,MAAM,EAAE;EAC5B,IAAMC,KAAK,GAAGD,MAAM,EAAE;EACtBE,SAAS,CAAC,YAAM;IACdD,KAAK,CAACE,OAAO,GAAGZ,EAAE;EACtB,CAAG,EAAE,CAACA,EAAE,CAAC,CAAC;EACR,IAAMa,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;IAClBN,SAAS,CAAC,UAACO,GAAG,EAAK;MACjB,IAAI,CAACA,GAAG,IAAI,CAACN,WAAW,CAACI,OAAO,EAAE;QAChCJ,WAAW,CAACI,OAAO,GAAGG,MAAM,CAACC,WAAW,CAACN,KAAK,CAACE,OAAO,EAAEX,QAAQ,CAAC;MACzE;MACM,OAAO,IAAI;IACjB,CAAK,CAAC;EACN,CAAG;EACD,IAAMgB,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;IACjBV,SAAS,CAAC,KAAK,CAAC;IAChBQ,MAAM,CAACG,aAAa,CAACV,WAAW,CAACI,OAAO,CAAC;IACzCJ,WAAW,CAACI,OAAO,GAAG,KAAK,CAAC;EAChC,CAAG;EACD,IAAMO,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;IACnB,IAAIb,MAAM,EAAE;MACVW,IAAI,EAAE;IACZ,CAAK,MAAM;MACLJ,KAAK,EAAE;IACb;EACA,CAAG;EACD,OAAO;IAAEA,KAAK,EAALA,KAAK;IAAEI,IAAI,EAAJA,IAAI;IAAEE,MAAM,EAANA,MAAM;IAAEb,MAAM,EAANA;EAAM,CAAE;AACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}