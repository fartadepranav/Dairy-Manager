{"ast":null,"code":"import _slicedToArray from \"F:/Dairy Project/dairy_management/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nfunction getInputOnChange(setValue) {\n  return function (val) {\n    if (!val) {\n      setValue(val);\n    } else if (typeof val === \"function\") {\n      setValue(val);\n    } else if (typeof val === \"object\" && \"nativeEvent\" in val) {\n      var currentTarget = val.currentTarget;\n      if (currentTarget.type === \"checkbox\") {\n        setValue(currentTarget.checked);\n      } else {\n        setValue(currentTarget.value);\n      }\n    } else {\n      setValue(val);\n    }\n  };\n}\nfunction useInputState(initialState) {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  return [value, getInputOnChange(setValue)];\n}\nexport { getInputOnChange, useInputState };","map":{"version":3,"names":["getInputOnChange","setValue","val","currentTarget","type","checked","value","useInputState","initialState","_useState","useState","_useState2","_slicedToArray"],"sources":["F:\\Dairy Project\\dairy_management\\node_modules\\@mantine\\hooks\\src\\use-input-state\\use-input-state.ts"],"sourcesContent":["import React, { useState } from 'react';\n\nexport function getInputOnChange<T>(\n  setValue: (value: null | undefined | T | ((current: T) => T)) => void\n) {\n  return (val: null | undefined | T | React.ChangeEvent<any> | ((current: T) => T)) => {\n    if (!val) {\n      setValue(val as T);\n    } else if (typeof val === 'function') {\n      setValue(val);\n    } else if (typeof val === 'object' && 'nativeEvent' in val) {\n      const { currentTarget } = val;\n\n      if (currentTarget.type === 'checkbox') {\n        setValue((currentTarget as any).checked as any);\n      } else {\n        setValue(currentTarget.value as any);\n      }\n    } else {\n      setValue(val);\n    }\n  };\n}\n\nexport function useInputState<T>(initialState: T) {\n  const [value, setValue] = useState(initialState);\n  return [value, getInputOnChange<T>(setValue)] as [\n    T,\n    (value: null | undefined | T | React.ChangeEvent<any>) => void\n  ];\n}\n"],"mappings":";;AACO,SAASA,gBAAgBA,CAACC,QAAQ,EAAE;EACzC,OAAO,UAACC,GAAG,EAAK;IACd,IAAI,CAACA,GAAG,EAAE;MACRD,QAAQ,CAACC,GAAG,CAAC;IACnB,CAAK,MAAM,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;MACpCD,QAAQ,CAACC,GAAG,CAAC;IACnB,CAAK,MAAM,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,aAAa,IAAIA,GAAG,EAAE;MAC1D,IAAQC,aAAa,GAAKD,GAAG,CAArBC,aAAa;MACrB,IAAIA,aAAa,CAACC,IAAI,KAAK,UAAU,EAAE;QACrCH,QAAQ,CAACE,aAAa,CAACE,OAAO,CAAC;MACvC,CAAO,MAAM;QACLJ,QAAQ,CAACE,aAAa,CAACG,KAAK,CAAC;MACrC;IACA,CAAK,MAAM;MACLL,QAAQ,CAACC,GAAG,CAAC;IACnB;EACA,CAAG;AACH;AACO,SAASK,aAAaA,CAACC,YAAY,EAAE;EAC1C,IAAAC,SAAA,GAA0BC,QAAQ,CAACF,YAAY,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAzCH,KAAK,GAAAK,UAAA;IAAEV,QAAQ,GAAAU,UAAA;EACtB,OAAO,CAACL,KAAK,EAAEN,gBAAgB,CAACC,QAAQ,CAAC,CAAC;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}