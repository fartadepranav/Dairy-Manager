{"ast":null,"code":"import { randomId } from '../utils/random-id/random-id.js';\nfunction createAriaHider(containerNode) {\n  var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"body > :not(script)\";\n  var id = randomId();\n  var rootNodes = Array.from(document.querySelectorAll(selector)).map(function (node) {\n    var _a;\n    if (((_a = node == null ? void 0 : node.shadowRoot) == null ? void 0 : _a.contains(containerNode)) || node.contains(containerNode)) {\n      return void 0;\n    }\n    var ariaHidden = node.getAttribute(\"aria-hidden\");\n    var prevAriaHidden = node.getAttribute(\"data-hidden\");\n    var prevFocusId = node.getAttribute(\"data-focus-id\");\n    node.setAttribute(\"data-focus-id\", id);\n    if (ariaHidden === null || ariaHidden === \"false\") {\n      node.setAttribute(\"aria-hidden\", \"true\");\n    } else if (!prevAriaHidden && !prevFocusId) {\n      node.setAttribute(\"data-hidden\", ariaHidden);\n    }\n    return {\n      node: node,\n      ariaHidden: prevAriaHidden || null\n    };\n  });\n  return function () {\n    rootNodes.forEach(function (item) {\n      if (!item || id !== item.node.getAttribute(\"data-focus-id\")) {\n        return;\n      }\n      if (item.ariaHidden === null) {\n        item.node.removeAttribute(\"aria-hidden\");\n      } else {\n        item.node.setAttribute(\"aria-hidden\", item.ariaHidden);\n      }\n      item.node.removeAttribute(\"data-focus-id\");\n      item.node.removeAttribute(\"data-hidden\");\n    });\n  };\n}\nexport { createAriaHider };","map":null,"metadata":{},"sourceType":"module"}