{"ast":null,"code":"import _slicedToArray from \"F:/Dairy Project/dairy_management/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"F:/Dairy Project/dairy_management/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { clamp, assignRef, useMergedRef, useOs } from '@mantine/hooks';\nimport { rem, useComponentDefaultProps, getSize } from '@mantine/styles';\nimport { getInputMode } from './get-input-mode/get-input-mode.js';\nimport { Chevron } from './Chevron.js';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles.js';\nimport { TextInput } from '../TextInput/TextInput.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return target;\n};\nvar defaultFormatter = function defaultFormatter(value) {\n  return value || \"\";\n};\nvar defaultParser = function defaultParser(num) {\n  if (num === \"-\") {\n    return num;\n  }\n  var tempNum = num;\n  if (tempNum[0] === \".\") {\n    tempNum = \"0\".concat(num);\n  }\n  var parsedNum = parseFloat(tempNum);\n  if (Number.isNaN(parsedNum)) {\n    return \"\";\n  }\n  return num;\n};\nvar CHEVRON_SIZES = {\n  xs: rem(10),\n  sm: rem(14),\n  md: rem(16),\n  lg: rem(18),\n  xl: rem(20)\n};\nvar defaultProps = {\n  step: 1,\n  hideControls: false,\n  size: \"sm\",\n  precision: 0,\n  noClampOnBlur: false,\n  removeTrailingZeros: false,\n  decimalSeparator: \".\",\n  formatter: defaultFormatter,\n  parser: defaultParser,\n  type: \"text\"\n};\nvar NumberInput = forwardRef(function (props, ref) {\n  var _a = useComponentDefaultProps(\"NumberInput\", defaultProps, props),\n    readOnly = _a.readOnly,\n    disabled = _a.disabled,\n    value = _a.value,\n    onChange = _a.onChange,\n    decimalSeparator = _a.decimalSeparator,\n    thousandsSeparator = _a.thousandsSeparator,\n    min = _a.min,\n    max = _a.max,\n    startValue = _a.startValue,\n    step = _a.step,\n    stepHoldInterval = _a.stepHoldInterval,\n    stepHoldDelay = _a.stepHoldDelay,\n    onFocus = _a.onFocus,\n    onBlur = _a.onBlur,\n    onKeyDown = _a.onKeyDown,\n    onKeyUp = _a.onKeyUp,\n    hideControls = _a.hideControls,\n    radius = _a.radius,\n    variant = _a.variant,\n    precision = _a.precision,\n    removeTrailingZeros = _a.removeTrailingZeros,\n    defaultValue = _a.defaultValue,\n    noClampOnBlur = _a.noClampOnBlur,\n    handlersRef = _a.handlersRef,\n    classNames = _a.classNames,\n    styles = _a.styles,\n    size = _a.size,\n    rightSection = _a.rightSection,\n    rightSectionWidth = _a.rightSectionWidth,\n    formatter = _a.formatter,\n    parser = _a.parser,\n    inputMode = _a.inputMode,\n    unstyled = _a.unstyled,\n    type = _a.type,\n    others = __objRest(_a, [\"readOnly\", \"disabled\", \"value\", \"onChange\", \"decimalSeparator\", \"thousandsSeparator\", \"min\", \"max\", \"startValue\", \"step\", \"stepHoldInterval\", \"stepHoldDelay\", \"onFocus\", \"onBlur\", \"onKeyDown\", \"onKeyUp\", \"hideControls\", \"radius\", \"variant\", \"precision\", \"removeTrailingZeros\", \"defaultValue\", \"noClampOnBlur\", \"handlersRef\", \"classNames\", \"styles\", \"size\", \"rightSection\", \"rightSectionWidth\", \"formatter\", \"parser\", \"inputMode\", \"unstyled\", \"type\"]);\n  var _useStyles = useStyles({\n      radius: radius\n    }, {\n      classNames: classNames,\n      styles: styles,\n      unstyled: unstyled,\n      name: \"NumberInput\",\n      variant: variant,\n      size: size\n    }),\n    classes = _useStyles.classes,\n    cx = _useStyles.cx;\n  var parsePrecision = function parsePrecision(val) {\n    if (val === \"\") return \"\";\n    var result = val.toFixed(precision);\n    if (removeTrailingZeros && precision > 0) {\n      result = result.replace(new RegExp(\"[0]{0,\".concat(precision, \"}$\")), \"\");\n      if (result.endsWith(\".\")) {\n        result = result.slice(0, -1);\n      }\n    }\n    return result;\n  };\n  var formatNum = function formatNum(val) {\n    var parsedStr = val;\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(\".\", decimalSeparator);\n    }\n    return formatter(parsedStr);\n  };\n  var parseNum = function parseNum(val) {\n    var num = val;\n    if (decimalSeparator) {\n      num = num.replaceAll(thousandsSeparator, \"\").replace(decimalSeparator, \".\");\n    }\n    return parser(num);\n  };\n  var formatInternalValue = function formatInternalValue(val) {\n    return formatNum(parsePrecision(val));\n  };\n  var _useState = useState(typeof value === \"number\" ? value : typeof defaultValue === \"number\" ? defaultValue : \"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    internalValue = _useState2[0],\n    _setInternalValue = _useState2[1];\n  var _useState3 = useState(function () {\n      return formatInternalValue(internalValue);\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputValue = _useState4[0],\n    setInputValue = _useState4[1];\n  var inputRef = useRef();\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFocussed = _useState6[0],\n    setIsFocussed = _useState6[1];\n  var setInternalValue = function setInternalValue(val, forceInputValueUpdate) {\n    if (!isFocussed || forceInputValueUpdate) {\n      var newInputValue = formatInternalValue(val);\n      if (newInputValue !== inputValue) {\n        setInputValue(newInputValue);\n      }\n    }\n    if (val !== internalValue) {\n      _setInternalValue(val);\n    }\n  };\n  var _min = typeof min === \"number\" ? min : -Infinity;\n  var _max = typeof max === \"number\" ? max : Infinity;\n  var incrementRef = useRef();\n  incrementRef.current = function () {\n    var _a2;\n    var newInternalValue;\n    if (internalValue === \"\") {\n      newInternalValue = (_a2 = startValue != null ? startValue : min) != null ? _a2 : 0;\n    } else {\n      newInternalValue = parseFloat(parsePrecision(clamp(internalValue + step, _min, _max)));\n    }\n    setInternalValue(newInternalValue, true);\n    onChange == null ? void 0 : onChange(newInternalValue);\n  };\n  var decrementRef = useRef();\n  decrementRef.current = function () {\n    var _a2;\n    var newInternalValue;\n    if (internalValue === \"\") {\n      newInternalValue = (_a2 = startValue != null ? startValue : min) != null ? _a2 : 0;\n    } else {\n      newInternalValue = parseFloat(parsePrecision(clamp(internalValue - step, _min, _max)));\n    }\n    setInternalValue(newInternalValue, true);\n    onChange == null ? void 0 : onChange(newInternalValue);\n  };\n  assignRef(handlersRef, {\n    increment: incrementRef.current,\n    decrement: decrementRef.current\n  });\n  useEffect(function () {\n    if (isFocussed) {\n      return;\n    }\n    if (value === void 0) {\n      setInternalValue(internalValue, true);\n    } else {\n      setInternalValue(value, true);\n    }\n  }, [value, isFocussed]);\n  var shouldUseStepInterval = stepHoldDelay !== void 0 && stepHoldInterval !== void 0;\n  var onStepTimeoutRef = useRef(null);\n  var stepCountRef = useRef(0);\n  var onStepDone = function onStepDone() {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n  var onStepHandleChange = function onStepHandleChange(isIncrement) {\n    if (isIncrement) {\n      incrementRef.current();\n    } else {\n      decrementRef.current();\n    }\n    stepCountRef.current += 1;\n  };\n  var onStepLoop = function onStepLoop(isIncrement) {\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      var interval = typeof stepHoldInterval === \"number\" ? stepHoldInterval : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(function () {\n        return onStepLoop(isIncrement);\n      }, interval);\n    }\n  };\n  var onStep = function onStep(event, isIncrement) {\n    event.preventDefault();\n    inputRef.current.focus();\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(function () {\n        return onStepLoop(isIncrement);\n      }, stepHoldDelay);\n    }\n  };\n  useEffect(function () {\n    onStepDone();\n    return onStepDone;\n  }, []);\n  var controls = /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.rightSection\n  }, /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: internalValue >= max,\n    className: cx(classes.control, classes.controlUp),\n    onPointerDown: function onPointerDown(event) {\n      onStep(event, true);\n    },\n    onPointerUp: onStepDone,\n    onPointerLeave: onStepDone\n  }, /* @__PURE__ */React.createElement(Chevron, {\n    size: getSize({\n      size: size,\n      sizes: CHEVRON_SIZES\n    }),\n    direction: \"up\"\n  })), /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: internalValue <= min,\n    className: cx(classes.control, classes.controlDown),\n    onPointerDown: function onPointerDown(event) {\n      onStep(event, false);\n    },\n    onPointerUp: onStepDone,\n    onPointerLeave: onStepDone\n  }, /* @__PURE__ */React.createElement(Chevron, {\n    size: getSize({\n      size: size,\n      sizes: CHEVRON_SIZES\n    }),\n    direction: \"down\"\n  })));\n  var processInputValue = function processInputValue(newInputValue) {\n    var normalizedInputValue = newInputValue;\n    if (normalizedInputValue[0] === \"\".concat(decimalSeparator) || normalizedInputValue[0] === \".\") {\n      normalizedInputValue = \"0\".concat(normalizedInputValue);\n    }\n    var parsedValue = parseFloat(parsePrecision(parseFloat(parseNum(normalizedInputValue))));\n    var clampedValue = !noClampOnBlur ? clamp(parsedValue, _min, _max) : parsedValue;\n    var finalValue = Number.isNaN(clampedValue) ? \"\" : clampedValue;\n    var internalValueChanged = internalValue !== finalValue;\n    setInputValue(newInputValue);\n    setInternalValue(finalValue);\n    if (internalValueChanged) {\n      onChange == null ? void 0 : onChange(finalValue);\n    }\n  };\n  var handleChange = function handleChange(event) {\n    var evt = event.nativeEvent;\n    if (evt.isComposing) {\n      return;\n    }\n    processInputValue(event.target.value);\n  };\n  var handleFocus = function handleFocus(event) {\n    setIsFocussed(true);\n    onFocus == null ? void 0 : onFocus(event);\n  };\n  var handleBlur = function handleBlur(event) {\n    setIsFocussed(false);\n    onBlur == null ? void 0 : onBlur(event);\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    typeof onKeyDown === \"function\" && onKeyDown(event);\n    if (event.repeat && shouldUseStepInterval && (event.key === \"ArrowUp\" || event.key === \"ArrowDown\")) {\n      event.preventDefault();\n      return;\n    }\n    if (!readOnly) {\n      if (event.key === \"ArrowUp\") {\n        onStep(event, true);\n      } else if (event.key === \"ArrowDown\") {\n        onStep(event, false);\n      }\n    }\n  };\n  var handleKeyUp = function handleKeyUp(event) {\n    typeof onKeyUp === \"function\" && onKeyUp(event);\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      onStepDone();\n    }\n  };\n  return /* @__PURE__ */React.createElement(TextInput, __spreadProps(__spreadValues({}, others), {\n    type: type,\n    variant: variant,\n    value: inputValue,\n    disabled: disabled,\n    readOnly: readOnly,\n    ref: useMergedRef(inputRef, ref),\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    rightSection: rightSection || (disabled || readOnly || hideControls || variant === \"unstyled\" ? null : controls),\n    rightSectionWidth: rightSectionWidth != null ? rightSectionWidth : \"calc(\".concat(getSize({\n      size: size,\n      sizes: CONTROL_SIZES\n    }), \" + \").concat(rem(1), \")\"),\n    radius: radius,\n    max: max,\n    min: min,\n    step: step,\n    size: size,\n    styles: styles,\n    classNames: classNames,\n    inputMode: inputMode || getInputMode(step, precision, useOs()),\n    __staticSelector: \"NumberInput\",\n    unstyled: unstyled\n  }));\n});\nNumberInput.displayName = \"@mantine/core/NumberInput\";\nexport { NumberInput };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","__spreadProps","__objRest","source","exclude","target","indexOf","_iterator2","_step2","defaultFormatter","defaultParser","num","tempNum","concat","parsedNum","parseFloat","Number","isNaN","CHEVRON_SIZES","xs","rem","sm","md","lg","xl","defaultProps","step","hideControls","size","precision","noClampOnBlur","removeTrailingZeros","decimalSeparator","formatter","parser","type","NumberInput","forwardRef","props","ref","_a","useComponentDefaultProps","readOnly","disabled","onChange","thousandsSeparator","min","max","startValue","stepHoldInterval","stepHoldDelay","onFocus","onBlur","onKeyDown","onKeyUp","radius","variant","defaultValue","handlersRef","classNames","styles","rightSection","rightSectionWidth","inputMode","unstyled","others","_useStyles","useStyles","name","classes","cx","parsePrecision","val","result","toFixed","replace","RegExp","endsWith","slice","formatNum","parsedStr","parseNum","replaceAll","formatInternalValue","_useState","useState","_useState2","_slicedToArray","internalValue","_setInternalValue","_useState3","_useState4","inputValue","setInputValue","inputRef","useRef","_useState5","_useState6","isFocussed","setIsFocussed","setInternalValue","forceInputValueUpdate","newInputValue","_min","Infinity","_max","incrementRef","current","_a2","newInternalValue","clamp","decrementRef","assignRef","increment","decrement","useEffect","shouldUseStepInterval","onStepTimeoutRef","stepCountRef","onStepDone","window","clearTimeout","onStepHandleChange","isIncrement","onStepLoop","interval","setTimeout","onStep","event","preventDefault","focus","controls","React","createElement","className","tabIndex","control","controlUp","onPointerDown","onPointerUp","onPointerLeave","Chevron","getSize","sizes","direction","controlDown","processInputValue","normalizedInputValue","parsedValue","clampedValue","finalValue","internalValueChanged","handleChange","evt","nativeEvent","isComposing","handleFocus","handleBlur","handleKeyDown","repeat","handleKeyUp","TextInput","useMergedRef","CONTROL_SIZES","getInputMode","useOs","__staticSelector","displayName"],"sources":["F:\\Dairy Project\\dairy_management\\node_modules\\@mantine\\core\\src\\NumberInput\\NumberInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from 'react';\nimport { useMergedRef, assignRef, useOs, clamp } from '@mantine/hooks';\nimport { DefaultProps, Selectors, useComponentDefaultProps, rem, getSize } from '@mantine/styles';\nimport { TextInput } from '../TextInput';\nimport { InputStylesNames, InputWrapperStylesNames } from '../Input';\nimport { getInputMode } from './get-input-mode/get-input-mode';\nimport { Chevron } from './Chevron';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles';\n\nexport type InnerNumberInputStylesNames = Selectors<typeof useStyles>;\nexport type NumberInputStylesNames =\n  | InputStylesNames\n  | InputWrapperStylesNames\n  | InnerNumberInputStylesNames;\n\nexport interface NumberInputHandlers {\n  increment(): void;\n  decrement(): void;\n}\n\ntype Formatter = (value: string | '') => string;\ntype Parser = (value: string | '') => string;\n\nexport interface NumberInputProps\n  extends DefaultProps<NumberInputStylesNames>,\n    Omit<\n      React.ComponentPropsWithoutRef<typeof TextInput>,\n      'onChange' | 'value' | 'classNames' | 'styles' | 'type'\n    > {\n  /** Called when value changes */\n  onChange?(value: number | ''): void;\n\n  /** Input value for controlled component */\n  value?: number | '';\n\n  /** Default value for uncontrolled component */\n  defaultValue?: number | '';\n\n  /** The decimal separator */\n  decimalSeparator?: string;\n\n  /** The thousands separator */\n  thousandsSeparator?: string;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** First value if no initial value was set and increment/decrement is triggered using controls or up/down arrows */\n  startValue?: number;\n\n  /** Number by which value will be incremented/decremented with controls and up/down arrows */\n  step?: number;\n\n  /** Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds. */\n  stepHoldInterval?: number | ((stepCount: number) => number);\n\n  /** Initial delay in milliseconds before stepping the value. */\n  stepHoldDelay?: number;\n\n  /** Removes increment/decrement controls */\n  hideControls?: boolean;\n\n  /** Amount of digits after the decimal point  */\n  precision?: number;\n\n  /** Only works if a precision is given, removes the trailing zeros, false by default */\n  removeTrailingZeros?: boolean;\n\n  /** Prevent value clamp on blur */\n  noClampOnBlur?: boolean;\n\n  /** Get increment/decrement handlers */\n  handlersRef?: React.ForwardedRef<NumberInputHandlers | undefined>;\n\n  /** Formats the number into the input */\n  formatter?: Formatter;\n\n  /** Parses the value from formatter, should be used with formatter at the same time */\n  parser?: Parser;\n\n  /** Input type, defaults to text */\n  type?: 'text' | 'number';\n}\n\nconst defaultFormatter: Formatter = (value) => value || '';\nconst defaultParser: Parser = (num) => {\n  if (num === '-') {\n    return num;\n  }\n\n  let tempNum = num;\n\n  if (tempNum[0] === '.') {\n    tempNum = `0${num}`;\n  }\n\n  const parsedNum = parseFloat(tempNum);\n\n  if (Number.isNaN(parsedNum)) {\n    return '';\n  }\n\n  return num;\n};\n\nconst CHEVRON_SIZES = {\n  xs: rem(10),\n  sm: rem(14),\n  md: rem(16),\n  lg: rem(18),\n  xl: rem(20),\n};\n\nconst defaultProps: Partial<NumberInputProps> = {\n  step: 1,\n  hideControls: false,\n  size: 'sm',\n  precision: 0,\n  noClampOnBlur: false,\n  removeTrailingZeros: false,\n  decimalSeparator: '.',\n  formatter: defaultFormatter,\n  parser: defaultParser,\n  type: 'text',\n};\n\nexport const NumberInput = forwardRef<HTMLInputElement, NumberInputProps>((props, ref) => {\n  const {\n    readOnly,\n    disabled,\n    value,\n    onChange,\n    decimalSeparator,\n    thousandsSeparator,\n    min,\n    max,\n    startValue,\n    step,\n    stepHoldInterval,\n    stepHoldDelay,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    onKeyUp,\n    hideControls,\n    radius,\n    variant,\n    precision,\n    removeTrailingZeros,\n    defaultValue,\n    noClampOnBlur,\n    handlersRef,\n    classNames,\n    styles,\n    size,\n    rightSection,\n    rightSectionWidth,\n    formatter,\n    parser,\n    inputMode,\n    unstyled,\n    type,\n    ...others\n  } = useComponentDefaultProps('NumberInput', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { radius },\n    { classNames, styles, unstyled, name: 'NumberInput', variant, size }\n  );\n\n  const parsePrecision = (val: number | '') => {\n    if (val === '') return '';\n\n    let result = val.toFixed(precision);\n\n    if (removeTrailingZeros && precision > 0) {\n      result = result.replace(new RegExp(`[0]{0,${precision}}$`), '');\n      if (result.endsWith('.')) {\n        result = result.slice(0, -1);\n      }\n    }\n\n    return result;\n  };\n\n  const formatNum = (val: string) => {\n    let parsedStr = val;\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace('.', decimalSeparator);\n    }\n\n    return formatter(parsedStr);\n  };\n\n  const parseNum = (val: string): string | '' => {\n    let num = val;\n\n    if (decimalSeparator) {\n      num = num.replaceAll(thousandsSeparator, '').replace(decimalSeparator, '.');\n    }\n\n    return parser(num);\n  };\n\n  const formatInternalValue = (val: number | '') => formatNum(parsePrecision(val));\n\n  // Parsed value that will be used for uncontrolled state and for setting the inputValue\n  const [internalValue, _setInternalValue] = useState<number | ''>(\n    typeof value === 'number' ? value : typeof defaultValue === 'number' ? defaultValue : ''\n  );\n\n  // Value of input field. Gets changed through user input and on internalValue change\n  const [inputValue, setInputValue] = useState(() => formatInternalValue(internalValue));\n\n  const inputRef = useRef<HTMLInputElement>();\n\n  const [isFocussed, setIsFocussed] = useState(false);\n\n  const setInternalValue = (val: number | '', forceInputValueUpdate?: boolean) => {\n    if (!isFocussed || forceInputValueUpdate) {\n      const newInputValue = formatInternalValue(val);\n      if (newInputValue !== inputValue) {\n        // Make sure to update/reset the input value even if the internal value stays the same\n        // E. g. this may happen if the internalValue is \"10\" and the user entered \"10abc\"\n        setInputValue(newInputValue);\n      }\n    }\n\n    if (val !== internalValue) {\n      _setInternalValue(val);\n    }\n  };\n\n  const _min = typeof min === 'number' ? min : -Infinity;\n  const _max = typeof max === 'number' ? max : Infinity;\n\n  const incrementRef = useRef<() => void>();\n  incrementRef.current = () => {\n    let newInternalValue: number;\n    if (internalValue === '') {\n      newInternalValue = startValue ?? min ?? 0;\n    } else {\n      newInternalValue = parseFloat(parsePrecision(clamp(internalValue + step, _min, _max)));\n    }\n\n    setInternalValue(newInternalValue, true);\n    onChange?.(newInternalValue);\n  };\n\n  const decrementRef = useRef<() => void>();\n  decrementRef.current = () => {\n    let newInternalValue: number;\n    if (internalValue === '') {\n      newInternalValue = startValue ?? min ?? 0;\n    } else {\n      newInternalValue = parseFloat(parsePrecision(clamp(internalValue - step, _min, _max)));\n    }\n\n    setInternalValue(newInternalValue, true);\n    onChange?.(newInternalValue);\n  };\n\n  assignRef(handlersRef, { increment: incrementRef.current, decrement: decrementRef.current });\n\n  useEffect(() => {\n    if (isFocussed) {\n      return;\n    }\n\n    if (value === undefined) {\n      // For uncontrolled inputs reapply internalValue\n      setInternalValue(internalValue, true);\n    } else {\n      // For controlled inputs apply value\n      setInternalValue(value, true);\n    }\n  }, [value, isFocussed]);\n\n  const shouldUseStepInterval = stepHoldDelay !== undefined && stepHoldInterval !== undefined;\n  const onStepTimeoutRef = useRef<number>(null);\n  const stepCountRef = useRef<number>(0);\n\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n\n  const onStepHandleChange = (isIncrement: boolean) => {\n    if (isIncrement) {\n      incrementRef.current();\n    } else {\n      decrementRef.current();\n    }\n    stepCountRef.current += 1;\n  };\n\n  const onStepLoop = (isIncrement: boolean) => {\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      const interval =\n        typeof stepHoldInterval === 'number'\n          ? stepHoldInterval\n          : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n    }\n  };\n\n  const onStep = (\n    event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    isIncrement: boolean\n  ) => {\n    event.preventDefault();\n    inputRef.current.focus();\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n    }\n  };\n\n  useEffect(() => {\n    onStepDone();\n    return onStepDone;\n  }, []);\n\n  const controls = (\n    <div className={classes.rightSection}>\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        aria-hidden\n        disabled={internalValue >= max}\n        className={cx(classes.control, classes.controlUp)}\n        onPointerDown={(event) => {\n          onStep(event, true);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <Chevron size={getSize({ size, sizes: CHEVRON_SIZES })} direction=\"up\" />\n      </button>\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        aria-hidden\n        disabled={internalValue <= min}\n        className={cx(classes.control, classes.controlDown)}\n        onPointerDown={(event) => {\n          onStep(event, false);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <Chevron size={getSize({ size, sizes: CHEVRON_SIZES })} direction=\"down\" />\n      </button>\n    </div>\n  );\n\n  /**\n   * Parse new input value and propagate it via `onChange` to parent.\n   */\n  const processInputValue = (newInputValue: string) => {\n    let normalizedInputValue = newInputValue;\n    if (normalizedInputValue[0] === `${decimalSeparator}` || normalizedInputValue[0] === '.') {\n      normalizedInputValue = `0${normalizedInputValue}`;\n    }\n\n    const parsedValue = parseFloat(parsePrecision(parseFloat(parseNum(normalizedInputValue))));\n    const clampedValue = !noClampOnBlur ? clamp(parsedValue, _min, _max) : parsedValue;\n    const finalValue = Number.isNaN(clampedValue) ? '' : clampedValue;\n\n    const internalValueChanged = internalValue !== finalValue;\n\n    setInputValue(newInputValue);\n    setInternalValue(finalValue);\n\n    if (internalValueChanged) {\n      onChange?.(finalValue);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const evt = event.nativeEvent as InputEvent;\n    if (evt.isComposing) {\n      return;\n    }\n\n    processInputValue(event.target.value);\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    setIsFocussed(true);\n    onFocus?.(event);\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    setIsFocussed(false);\n    onBlur?.(event);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    typeof onKeyDown === 'function' && onKeyDown(event);\n    if (\n      event.repeat &&\n      shouldUseStepInterval &&\n      (event.key === 'ArrowUp' || event.key === 'ArrowDown')\n    ) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!readOnly) {\n      if (event.key === 'ArrowUp') {\n        onStep(event, true);\n      } else if (event.key === 'ArrowDown') {\n        onStep(event, false);\n      }\n    }\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    typeof onKeyUp === 'function' && onKeyUp(event);\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      onStepDone();\n    }\n  };\n\n  return (\n    <TextInput\n      {...others}\n      type={type}\n      variant={variant}\n      value={inputValue}\n      disabled={disabled}\n      readOnly={readOnly}\n      ref={useMergedRef(inputRef, ref)}\n      onChange={handleChange}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      rightSection={\n        rightSection ||\n        (disabled || readOnly || hideControls || variant === 'unstyled' ? null : controls)\n      }\n      rightSectionWidth={\n        rightSectionWidth ?? `calc(${getSize({ size, sizes: CONTROL_SIZES })} + ${rem(1)})`\n      }\n      radius={radius}\n      max={max}\n      min={min}\n      step={step}\n      size={size}\n      styles={styles}\n      classNames={classNames}\n      inputMode={inputMode || getInputMode(step, precision, useOs())}\n      __staticSelector=\"NumberInput\"\n      unstyled={unstyled}\n    />\n  );\n});\n\nNumberInput.displayName = '@mantine/core/NumberInput';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}