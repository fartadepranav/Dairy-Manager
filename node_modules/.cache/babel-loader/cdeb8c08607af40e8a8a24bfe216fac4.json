{"ast":null,"code":"import _defineProperty from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport { rem } from '@mantine/styles';\nimport { useScrollIntoView } from '@mantine/hooks';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from '../../Select/SelectScrollArea/SelectScrollArea.js';\nimport { PaginationPreviousIcon, PaginationNextIcon, PaginationFirstIcon, PaginationLastIcon } from '../../Pagination/Pagination.icons.js';\nimport useStyles from './RenderList.styles.js';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.js';\nimport { Divider } from '../../Divider/Divider.js';\nimport { Text } from '../../Text/Text.js';\nimport { TextInput } from '../../TextInput/TextInput.js';\nimport { ActionIcon } from '../../ActionIcon/ActionIcon.js';\nvar icons = {\n  Prev: PaginationPreviousIcon,\n  Next: PaginationNextIcon,\n  First: PaginationFirstIcon,\n  Last: PaginationLastIcon\n};\nvar rtlIons = {\n  Next: PaginationPreviousIcon,\n  Prev: PaginationNextIcon,\n  Last: PaginationFirstIcon,\n  First: PaginationLastIcon\n};\nfunction RenderList(_ref) {\n  var className = _ref.className,\n    data = _ref.data,\n    onSelect = _ref.onSelect,\n    selection = _ref.selection,\n    ItemComponent = _ref.itemComponent,\n    listComponent = _ref.listComponent,\n    TransferIcon = _ref.transferIcon,\n    TransferAllIcon = _ref.transferAllIcon,\n    transferAllMatchingFilter = _ref.transferAllMatchingFilter,\n    searchPlaceholder = _ref.searchPlaceholder,\n    query = _ref.query,\n    onSearch = _ref.onSearch,\n    filter = _ref.filter,\n    nothingFound = _ref.nothingFound,\n    placeholder = _ref.placeholder,\n    title = _ref.title,\n    showTransferAll = _ref.showTransferAll,\n    reversed = _ref.reversed,\n    onMoveAll = _ref.onMoveAll,\n    onMove = _ref.onMove,\n    height = _ref.height,\n    radius = _ref.radius,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    limit = _ref.limit,\n    unstyled = _ref.unstyled,\n    variant = _ref.variant;\n  var _useStyles = useStyles({\n      reversed: reversed,\n      native: listComponent !== SelectScrollArea,\n      radius: radius\n    }, {\n      name: \"TransferList\",\n      classNames: classNames,\n      styles: styles,\n      unstyled: unstyled,\n      variant: variant\n    }),\n    classes = _useStyles.classes,\n    cx = _useStyles.cx,\n    theme = _useStyles.theme;\n  var unGroupedItems = [];\n  var groupedItems = [];\n  var _useState = useState(-1),\n    _useState2 = _slicedToArray(_useState, 2),\n    hovered = _useState2[0],\n    setHovered = _useState2[1];\n  var filteredData = data.filter(function (item) {\n    return filter(query, item);\n  }).slice(0, limit);\n  var ListComponent = listComponent || \"div\";\n  var Icons = theme.dir === \"rtl\" ? rtlIons : icons;\n  var itemsRefs = useRef({});\n  var sortedData = groupOptions({\n    data: filteredData\n  });\n  var _useScrollIntoView = useScrollIntoView({\n      duration: 0,\n      offset: 5,\n      cancelable: false,\n      isList: true\n    }),\n    scrollIntoView = _useScrollIntoView.scrollIntoView,\n    targetRef = _useScrollIntoView.targetRef,\n    scrollableRef = _useScrollIntoView.scrollableRef;\n  var groupName = null;\n  sortedData.forEach(function (item, index) {\n    var itemComponent = /* @__PURE__ */React.createElement(UnstyledButton, {\n      unstyled: unstyled,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return onSelect(item.value);\n      },\n      key: item.value,\n      onMouseEnter: function onMouseEnter() {\n        return setHovered(index);\n      },\n      className: cx(classes.transferListItem, _defineProperty({}, classes.transferListItemHovered, index === hovered)),\n      ref: function ref(node) {\n        if (itemsRefs && itemsRefs.current) {\n          itemsRefs.current[item.value] = node;\n        }\n      }\n    }, /* @__PURE__ */React.createElement(ItemComponent, {\n      data: item,\n      selected: selection.includes(item.value),\n      radius: radius\n    }));\n    if (!item.group) {\n      unGroupedItems.push(itemComponent);\n    } else {\n      if (groupName !== item.group) {\n        groupName = item.group;\n        groupedItems.push( /* @__PURE__ */React.createElement(\"div\", {\n          className: classes.separator,\n          key: groupName\n        }, /* @__PURE__ */React.createElement(Divider, {\n          classNames: {\n            label: classes.separatorLabel\n          },\n          label: groupName\n        })));\n      }\n      groupedItems.push(itemComponent);\n    }\n  });\n  if (groupedItems.length > 0 && unGroupedItems.length > 0) {\n    unGroupedItems.unshift( /* @__PURE__ */React.createElement(\"div\", {\n      className: classes.separator\n    }, /* @__PURE__ */React.createElement(Divider, {\n      unstyled: unstyled,\n      classNames: {\n        label: classes.separatorLabel\n      }\n    })));\n  }\n  var handleSearchKeydown = function handleSearchKeydown(event) {\n    switch (event.key) {\n      case \"Enter\":\n        {\n          event.preventDefault();\n          if (filteredData[hovered]) {\n            onSelect(filteredData[hovered].value);\n          }\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          event.preventDefault();\n          setHovered(function (current) {\n            var _a;\n            var nextIndex = current < filteredData.length - 1 ? current + 1 : current;\n            targetRef.current = itemsRefs.current[(_a = filteredData[nextIndex]) == null ? void 0 : _a.value];\n            scrollIntoView({\n              alignment: \"end\"\n            });\n            return nextIndex;\n          });\n          break;\n        }\n      case \"ArrowUp\":\n        {\n          event.preventDefault();\n          setHovered(function (current) {\n            var _a;\n            var nextIndex = current > 0 ? current - 1 : current;\n            targetRef.current = itemsRefs.current[(_a = filteredData[nextIndex]) == null ? void 0 : _a.value];\n            scrollIntoView({\n              alignment: \"start\"\n            });\n            return nextIndex;\n          });\n        }\n    }\n  };\n  var transferIcon = reversed ? /* @__PURE__ */React.createElement(Icons.Prev, {\n    size: \"1rem\"\n  }) : /* @__PURE__ */React.createElement(Icons.Next, {\n    size: \"1rem\"\n  });\n  var transferAllIcon = reversed ? /* @__PURE__ */React.createElement(Icons.First, {\n    size: \"1rem\"\n  }) : /* @__PURE__ */React.createElement(Icons.Last, {\n    size: \"1rem\"\n  });\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.transferList, className)\n  }, title && /* @__PURE__ */React.createElement(Text, {\n    weight: 500,\n    unstyled: unstyled,\n    className: classes.transferListTitle\n  }, title), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.transferListBody\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.transferListHeader\n  }, /* @__PURE__ */React.createElement(TextInput, {\n    unstyled: unstyled,\n    value: query,\n    onChange: function onChange(event) {\n      onSearch(event.currentTarget.value);\n      setHovered(0);\n    },\n    onFocus: function onFocus() {\n      return setHovered(0);\n    },\n    onBlur: function onBlur() {\n      return setHovered(-1);\n    },\n    placeholder: searchPlaceholder,\n    radius: 0,\n    onKeyDown: handleSearchKeydown,\n    sx: {\n      flex: 1\n    },\n    classNames: {\n      input: classes.transferListSearch\n    }\n  }), /* @__PURE__ */React.createElement(ActionIcon, {\n    variant: \"default\",\n    size: 36,\n    radius: 0,\n    className: classes.transferListControl,\n    disabled: selection.length === 0,\n    onClick: onMove,\n    unstyled: unstyled\n  }, TransferIcon ? /* @__PURE__ */React.createElement(TransferIcon, {\n    reversed: reversed\n  }) : transferIcon), showTransferAll && /* @__PURE__ */React.createElement(ActionIcon, {\n    variant: \"default\",\n    size: 36,\n    radius: 0,\n    className: classes.transferListControl,\n    disabled: transferAllMatchingFilter ? filteredData.length === 0 : data.length === 0,\n    onClick: onMoveAll,\n    unstyled: unstyled\n  }, TransferAllIcon ? /* @__PURE__ */React.createElement(TransferAllIcon, {\n    reversed: reversed\n  }) : transferAllIcon)), /* @__PURE__ */React.createElement(ListComponent, {\n    ref: scrollableRef,\n    onMouseLeave: function onMouseLeave() {\n      return setHovered(-1);\n    },\n    className: classes.transferListItems,\n    style: {\n      height: rem(height),\n      position: \"relative\",\n      overflowX: \"hidden\"\n    }\n  }, groupedItems.length > 0 || unGroupedItems.length > 0 ? /* @__PURE__ */React.createElement(React.Fragment, null, groupedItems, unGroupedItems) : /* @__PURE__ */React.createElement(Text, {\n    color: \"dimmed\",\n    unstyled: unstyled,\n    size: \"sm\",\n    align: \"center\",\n    mt: \"sm\"\n  }, !query && placeholder ? placeholder : nothingFound))));\n}\nRenderList.displayName = \"@mantine/core/RenderList\";\nexport { RenderList };","map":null,"metadata":{},"sourceType":"module"}