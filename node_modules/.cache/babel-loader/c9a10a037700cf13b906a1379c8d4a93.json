{"ast":null,"code":"import _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport React, { forwardRef, useState, useRef } from 'react';\nimport { useMove, useDidUpdate, useMergedRef, clampUseMovePosition } from '@mantine/hooks';\nimport { rem } from '@mantine/styles';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport useStyles from './ColorSlider.styles.js';\nimport { Box } from '../../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return target;\n};\nvar ColorSlider = forwardRef(function (_a, ref) {\n  var _b = _a,\n    value = _b.value,\n    onChange = _b.onChange,\n    onChangeEnd = _b.onChangeEnd,\n    maxValue = _b.maxValue,\n    round = _b.round,\n    _b$size = _b.size,\n    size = _b$size === void 0 ? \"md\" : _b$size,\n    _b$thumbColor = _b.thumbColor,\n    thumbColor = _b$thumbColor === void 0 ? \"transparent\" : _b$thumbColor,\n    _b$__staticSelector = _b.__staticSelector,\n    __staticSelector = _b$__staticSelector === void 0 ? \"ColorSlider\" : _b$__staticSelector,\n    _b$focusable = _b.focusable,\n    focusable = _b$focusable === void 0 ? true : _b$focusable,\n    overlays = _b.overlays,\n    classNames = _b.classNames,\n    styles = _b.styles,\n    className = _b.className,\n    unstyled = _b.unstyled,\n    variant = _b.variant,\n    others = __objRest(_b, [\"value\", \"onChange\", \"onChangeEnd\", \"maxValue\", \"round\", \"size\", \"thumbColor\", \"__staticSelector\", \"focusable\", \"overlays\", \"classNames\", \"styles\", \"className\", \"unstyled\", \"variant\"]);\n  var _useStyles = useStyles(null, {\n      classNames: classNames,\n      styles: styles,\n      name: __staticSelector,\n      unstyled: unstyled,\n      variant: variant,\n      size: size\n    }),\n    classes = _useStyles.classes,\n    cx = _useStyles.cx;\n  var _useState = useState({\n      y: 0,\n      x: value / maxValue\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    position = _useState2[0],\n    setPosition = _useState2[1];\n  var positionRef = useRef(position);\n  var getChangeValue = function getChangeValue(val) {\n    return round ? Math.round(val * maxValue) : val * maxValue;\n  };\n  var _useMove = useMove(function (_ref) {\n      var x = _ref.x,\n        y = _ref.y;\n      positionRef.current = {\n        x: x,\n        y: y\n      };\n      onChange(getChangeValue(x));\n    }, {\n      onScrubEnd: function onScrubEnd() {\n        var x = positionRef.current.x;\n        onChangeEnd(getChangeValue(x));\n      }\n    }),\n    sliderRef = _useMove.ref;\n  useDidUpdate(function () {\n    setPosition({\n      y: 0,\n      x: value / maxValue\n    });\n  }, [value]);\n  var handleArrow = function handleArrow(event, pos) {\n    event.preventDefault();\n    var _position = clampUseMovePosition(pos);\n    onChange(getChangeValue(_position.x));\n    onChangeEnd(getChangeValue(_position.x));\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    switch (event.key) {\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n  var layers = overlays.map(function (overlay, index) {\n    return /* @__PURE__ */React.createElement(\"div\", {\n      className: classes.sliderOverlay,\n      style: overlay,\n      key: index\n    });\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadProps(__spreadValues({}, others), {\n    ref: useMergedRef(sliderRef, ref),\n    className: cx(classes.slider, className),\n    role: \"slider\",\n    \"aria-valuenow\": value,\n    \"aria-valuemax\": maxValue,\n    \"aria-valuemin\": 0,\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown\n  }), layers, /* @__PURE__ */React.createElement(Thumb, {\n    __staticSelector: __staticSelector,\n    classNames: classNames,\n    styles: styles,\n    position: position,\n    style: {\n      top: rem(1),\n      backgroundColor: thumbColor\n    },\n    className: classes.sliderThumb,\n    size: size\n  }));\n});\nColorSlider.displayName = \"@mantine/core/ColorSlider\";\nexport { ColorSlider };","map":null,"metadata":{},"sourceType":"module"}