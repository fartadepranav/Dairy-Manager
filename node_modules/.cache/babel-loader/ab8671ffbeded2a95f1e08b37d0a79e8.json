{"ast":null,"code":"import _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nfunction useValidatedState(initialValue, validation, initialValidationState) {\n  var _useState = useState(initialValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useState3 = useState(validation(initialValue) ? initialValue : void 0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastValidValue = _useState4[0],\n    setLastValidValue = _useState4[1];\n  var _useState5 = useState(typeof initialValidationState === \"boolean\" ? initialValidationState : validation(initialValue)),\n    _useState6 = _slicedToArray(_useState5, 2),\n    valid = _useState6[0],\n    setValid = _useState6[1];\n  var onChange = function onChange(val) {\n    if (validation(val)) {\n      setLastValidValue(val);\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n    setValue(val);\n  };\n  return [{\n    value: value,\n    lastValidValue: lastValidValue,\n    valid: valid\n  }, onChange];\n}\nexport { useValidatedState };","map":null,"metadata":{},"sourceType":"module"}