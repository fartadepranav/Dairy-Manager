{"ast":null,"code":"import { findElementAncestor } from '../find-element-ancestor/find-element-ancestor.js';\nfunction getPreviousIndex(current, elements, loop) {\n  for (var i = current - 1; i >= 0; i -= 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n  if (loop) {\n    for (var _i = elements.length - 1; _i > -1; _i -= 1) {\n      if (!elements[_i].disabled) {\n        return _i;\n      }\n    }\n  }\n  return current;\n}\nfunction getNextIndex(current, elements, loop) {\n  for (var i = current + 1; i < elements.length; i += 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n  if (loop) {\n    for (var _i2 = 0; _i2 < elements.length; _i2 += 1) {\n      if (!elements[_i2].disabled) {\n        return _i2;\n      }\n    }\n  }\n  return current;\n}\nfunction onSameLevel(target, sibling, parentSelector) {\n  return findElementAncestor(target, parentSelector) === findElementAncestor(sibling, parentSelector);\n}\nfunction createScopedKeydownHandler(_ref) {\n  var parentSelector = _ref.parentSelector,\n    siblingSelector = _ref.siblingSelector,\n    onKeyDown = _ref.onKeyDown,\n    _ref$loop = _ref.loop,\n    loop = _ref$loop === void 0 ? true : _ref$loop,\n    _ref$activateOnFocus = _ref.activateOnFocus,\n    activateOnFocus = _ref$activateOnFocus === void 0 ? false : _ref$activateOnFocus,\n    _ref$dir = _ref.dir,\n    dir = _ref$dir === void 0 ? \"rtl\" : _ref$dir,\n    orientation = _ref.orientation;\n  return function (event) {\n    var _a;\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    var elements = Array.from(((_a = findElementAncestor(event.currentTarget, parentSelector)) == null ? void 0 : _a.querySelectorAll(siblingSelector)) || []).filter(function (node) {\n      return onSameLevel(event.currentTarget, node, parentSelector);\n    });\n    var current = elements.findIndex(function (el) {\n      return event.currentTarget === el;\n    });\n    var _nextIndex = getNextIndex(current, elements, loop);\n    var _previousIndex = getPreviousIndex(current, elements, loop);\n    var nextIndex = dir === \"rtl\" ? _previousIndex : _nextIndex;\n    var previousIndex = dir === \"rtl\" ? _nextIndex : _previousIndex;\n    switch (event.key) {\n      case \"ArrowRight\":\n        {\n          if (orientation === \"horizontal\") {\n            event.stopPropagation();\n            event.preventDefault();\n            elements[nextIndex].focus();\n            activateOnFocus && elements[nextIndex].click();\n          }\n          break;\n        }\n      case \"ArrowLeft\":\n        {\n          if (orientation === \"horizontal\") {\n            event.stopPropagation();\n            event.preventDefault();\n            elements[previousIndex].focus();\n            activateOnFocus && elements[previousIndex].click();\n          }\n          break;\n        }\n      case \"ArrowUp\":\n        {\n          if (orientation === \"vertical\") {\n            event.stopPropagation();\n            event.preventDefault();\n            elements[_previousIndex].focus();\n            activateOnFocus && elements[_previousIndex].click();\n          }\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          if (orientation === \"vertical\") {\n            event.stopPropagation();\n            event.preventDefault();\n            elements[_nextIndex].focus();\n            activateOnFocus && elements[_nextIndex].click();\n          }\n          break;\n        }\n      case \"Home\":\n        {\n          event.stopPropagation();\n          event.preventDefault();\n          !elements[0].disabled && elements[0].focus();\n          break;\n        }\n      case \"End\":\n        {\n          event.stopPropagation();\n          event.preventDefault();\n          var last = elements.length - 1;\n          !elements[last].disabled && elements[last].focus();\n          break;\n        }\n    }\n  };\n}\nexport { createScopedKeydownHandler };","map":null,"metadata":{},"sourceType":"module"}