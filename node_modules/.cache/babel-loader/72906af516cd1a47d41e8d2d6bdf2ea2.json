{"ast":null,"code":"import _toConsumableArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { getSafeId } from '@mantine/utils';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { AccordionContextProvider } from './Accordion.context.js';\nimport { ACCORDION_ERRORS } from './Accordion.errors.js';\nfunction AccordionProvider(_ref) {\n  var children = _ref.children,\n    multiple = _ref.multiple,\n    value = _ref.value,\n    defaultValue = _ref.defaultValue,\n    onChange = _ref.onChange,\n    id = _ref.id,\n    loop = _ref.loop,\n    transitionDuration = _ref.transitionDuration,\n    disableChevronRotation = _ref.disableChevronRotation,\n    chevronPosition = _ref.chevronPosition,\n    chevronSize = _ref.chevronSize,\n    order = _ref.order,\n    chevron = _ref.chevron,\n    variant = _ref.variant,\n    radius = _ref.radius,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    unstyled = _ref.unstyled;\n  var uid = useId(id);\n  var _useUncontrolled = useUncontrolled({\n      value: value,\n      defaultValue: defaultValue,\n      finalValue: multiple ? [] : null,\n      onChange: onChange\n    }),\n    _useUncontrolled2 = _slicedToArray(_useUncontrolled, 2),\n    _value = _useUncontrolled2[0],\n    handleChange = _useUncontrolled2[1];\n  var isItemActive = function isItemActive(itemValue) {\n    return Array.isArray(_value) ? _value.includes(itemValue) : itemValue === _value;\n  };\n  var handleItemChange = function handleItemChange(itemValue) {\n    var nextValue = Array.isArray(_value) ? _value.includes(itemValue) ? _value.filter(function (selectedValue) {\n      return selectedValue !== itemValue;\n    }) : [].concat(_toConsumableArray(_value), [itemValue]) : itemValue === _value ? null : itemValue;\n    handleChange(nextValue);\n  };\n  return /* @__PURE__ */React.createElement(AccordionContextProvider, {\n    value: {\n      isItemActive: isItemActive,\n      onChange: handleItemChange,\n      getControlId: getSafeId(\"\".concat(uid, \"-control\"), ACCORDION_ERRORS.value),\n      getRegionId: getSafeId(\"\".concat(uid, \"-panel\"), ACCORDION_ERRORS.value),\n      transitionDuration: transitionDuration,\n      disableChevronRotation: disableChevronRotation,\n      chevronPosition: chevronPosition,\n      chevronSize: chevronSize,\n      order: order,\n      chevron: chevron,\n      loop: loop,\n      variant: variant,\n      radius: radius,\n      classNames: classNames,\n      styles: styles,\n      unstyled: unstyled\n    }\n  }, children);\n}\nexport { AccordionProvider };","map":null,"metadata":{},"sourceType":"module"}