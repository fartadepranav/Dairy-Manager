{"ast":null,"code":"import { useState } from 'react';\nfunction useQueue({\n  initialValues = [],\n  limit\n}) {\n  const [{\n    state,\n    queue\n  }, setState] = useState({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit)\n  });\n  const add = (...items) => setState(current => {\n    const results = [...current.state, ...current.queue, ...items];\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const update = fn => setState(current => {\n    const results = fn([...current.state, ...current.queue]);\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const cleanQueue = () => setState(current => ({\n    state: current.state,\n    queue: []\n  }));\n  return {\n    state,\n    queue,\n    add,\n    update,\n    cleanQueue\n  };\n}\nexport { useQueue };","map":{"version":3,"names":["useQueue","initialValues","limit","state","queue","setState","useState","slice","add","items","current","results","update","fn","cleanQueue"],"sources":["F:\\Dairy Project\\dairy_management\\node_modules\\@mantine\\hooks\\src\\use-queue\\use-queue.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useQueue<T>({ initialValues = [], limit }: { initialValues?: T[]; limit: number }) {\n  const [{ state, queue }, setState] = useState({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit),\n  });\n\n  const add = (...items: T[]) =>\n    setState((current) => {\n      const results = [...current.state, ...current.queue, ...items];\n\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit),\n      };\n    });\n\n  const update = (fn: (state: T[]) => T[]) =>\n    setState((current) => {\n      const results = fn([...current.state, ...current.queue]);\n\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit),\n      };\n    });\n\n  const cleanQueue = () => setState((current) => ({ state: current.state, queue: [] }));\n\n  return {\n    state,\n    queue,\n    add,\n    update,\n    cleanQueue,\n  };\n}\n"],"mappings":";AACO,SAASA,QAAQA,CAAC;EAAEC,aAAa,GAAG,EAAE;EAAEC;AAAK,CAAE,EAAE;EACtD,MAAM,CAAC;IAAEC,KAAK;IAAEC;EAAK,CAAE,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC;IAC5CH,KAAK,EAAEF,aAAa,CAACM,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC;IACpCE,KAAK,EAAEH,aAAa,CAACM,KAAK,CAACL,KAAK;EACpC,CAAG,CAAC;EACF,MAAMM,GAAG,GAAGA,CAAC,GAAGC,KAAK,KAAKJ,QAAQ,CAAEK,OAAO,IAAK;IAC9C,MAAMC,OAAO,GAAG,CAAC,GAAGD,OAAO,CAACP,KAAK,EAAE,GAAGO,OAAO,CAACN,KAAK,EAAE,GAAGK,KAAK,CAAC;IAC9D,OAAO;MACLN,KAAK,EAAEQ,OAAO,CAACJ,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC;MAC9BE,KAAK,EAAEO,OAAO,CAACJ,KAAK,CAACL,KAAK;IAChC,CAAK;EACL,CAAG,CAAC;EACF,MAAMU,MAAM,GAAIC,EAAE,IAAKR,QAAQ,CAAEK,OAAO,IAAK;IAC3C,MAAMC,OAAO,GAAGE,EAAE,CAAC,CAAC,GAAGH,OAAO,CAACP,KAAK,EAAE,GAAGO,OAAO,CAACN,KAAK,CAAC,CAAC;IACxD,OAAO;MACLD,KAAK,EAAEQ,OAAO,CAACJ,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC;MAC9BE,KAAK,EAAEO,OAAO,CAACJ,KAAK,CAACL,KAAK;IAChC,CAAK;EACL,CAAG,CAAC;EACF,MAAMY,UAAU,GAAGA,CAAA,KAAMT,QAAQ,CAAEK,OAAO,KAAM;IAAEP,KAAK,EAAEO,OAAO,CAACP,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAE,CAAC,CAAC;EACrF,OAAO;IACLD,KAAK;IACLC,KAAK;IACLI,GAAG;IACHI,MAAM;IACNE;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}