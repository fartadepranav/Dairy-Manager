{"ast":null,"code":"import _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport clsx from 'clsx';\nimport { serializeStyles } from '@emotion/serialize';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useGuaranteedMemo } from './utils/use-guaranteed-memo/use-guaranteed-memo.js';\nimport { useEmotionCache } from './use-emotion-cache.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar refPropertyName = \"ref\";\nfunction getRef(args) {\n  var ref;\n  if (args.length !== 1) {\n    return {\n      args: args,\n      ref: ref\n    };\n  }\n  var _args = _slicedToArray(args, 1),\n    arg = _args[0];\n  if (!(arg instanceof Object)) {\n    return {\n      args: args,\n      ref: ref\n    };\n  }\n  if (!(refPropertyName in arg)) {\n    return {\n      args: args,\n      ref: ref\n    };\n  }\n  ref = arg[refPropertyName];\n  var argCopy = __spreadValues({}, arg);\n  delete argCopy[refPropertyName];\n  return {\n    args: [argCopy],\n    ref: ref\n  };\n}\nvar _ref = function () {\n    function merge(registered, css, className) {\n      var registeredStyles = [];\n      var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n      if (registeredStyles.length < 2) {\n        return className;\n      }\n      return rawClassName + css(registeredStyles);\n    }\n    function _cssFactory(params) {\n      var cache = params.cache;\n      var css = function css() {\n        for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n          styles[_key] = arguments[_key];\n        }\n        var _getRef = getRef(styles),\n          ref = _getRef.ref,\n          args = _getRef.args;\n        var serialized = serializeStyles(args, cache.registered);\n        insertStyles(cache, serialized, false);\n        return \"\".concat(cache.key, \"-\").concat(serialized.name).concat(ref === void 0 ? \"\" : \" \".concat(ref));\n      };\n      var cx = function cx() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return merge(cache.registered, css, clsx(args));\n      };\n      return {\n        css: css,\n        cx: cx\n      };\n    }\n    return {\n      cssFactory: _cssFactory\n    };\n  }(),\n  cssFactory = _ref.cssFactory;\nfunction useCss() {\n  var cache = useEmotionCache();\n  return useGuaranteedMemo(function () {\n    return cssFactory({\n      cache: cache\n    });\n  }, [cache]);\n}\nexport { cssFactory, useCss };","map":null,"metadata":{},"sourceType":"module"}