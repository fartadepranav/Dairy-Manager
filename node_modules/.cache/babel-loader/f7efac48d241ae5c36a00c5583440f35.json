{"ast":null,"code":"import _toConsumableArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ChipGroupProvider } from '../ChipGroup.context.js';\nvar defaultProps = {};\nfunction ChipGroup(props) {\n  var _useComponentDefaultP = useComponentDefaultProps(\"ChipGroup\", defaultProps, props),\n    value = _useComponentDefaultP.value,\n    defaultValue = _useComponentDefaultP.defaultValue,\n    onChange = _useComponentDefaultP.onChange,\n    multiple = _useComponentDefaultP.multiple,\n    children = _useComponentDefaultP.children;\n  var _useUncontrolled = useUncontrolled({\n      value: value,\n      defaultValue: defaultValue,\n      finalValue: multiple ? [] : null,\n      onChange: onChange\n    }),\n    _useUncontrolled2 = _slicedToArray(_useUncontrolled, 2),\n    _value = _useUncontrolled2[0],\n    setValue = _useUncontrolled2[1];\n  var isChipSelected = function isChipSelected(val) {\n    return Array.isArray(_value) ? _value.includes(val) : val === _value;\n  };\n  var handleChange = function handleChange(event) {\n    var val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter(function (v) {\n        return v !== val;\n      }) : [].concat(_toConsumableArray(_value), [val]));\n    } else {\n      setValue(val);\n    }\n  };\n  return /* @__PURE__ */React.createElement(ChipGroupProvider, {\n    value: {\n      isChipSelected: isChipSelected,\n      onChange: handleChange,\n      multiple: multiple\n    }\n  }, children);\n}\nChipGroup.displayName = \"@mantine/core/ChipGroup\";\nexport { ChipGroup };","map":null,"metadata":{},"sourceType":"module"}