{"ast":null,"code":"import _defineProperty from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport React, { forwardRef } from 'react';\nimport { useComponentDefaultProps, getSize } from '@mantine/styles';\nimport useStyles from './Step.styles.js';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.js';\nimport { Transition } from '../../Transition/Transition.js';\nimport { Loader } from '../../Loader/Loader.js';\nimport { CheckboxIcon } from '../../Checkbox/CheckboxIcon.js';\nimport { Text } from '../../Text/Text.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return target;\n};\nvar defaultIconSizes = {\n  xs: 16,\n  sm: 18,\n  md: 20,\n  lg: 22,\n  xl: 24\n};\nvar defaultProps = {\n  withIcon: true,\n  size: \"md\",\n  radius: \"xl\",\n  allowStepClick: true,\n  iconPosition: \"left\",\n  __staticSelector: \"Step\"\n};\nvar getStepFragment = function getStepFragment(Fragment, step) {\n  if (typeof Fragment === \"function\") {\n    return /* @__PURE__ */React.createElement(Fragment, {\n      step: step\n    });\n  }\n  return Fragment;\n};\nvar Step = forwardRef(function (props, ref) {\n  var _a = useComponentDefaultProps(\"StepperStep\", defaultProps, props),\n    className = _a.className,\n    step = _a.step,\n    state = _a.state,\n    color = _a.color,\n    icon = _a.icon,\n    completedIcon = _a.completedIcon,\n    progressIcon = _a.progressIcon,\n    label = _a.label,\n    description = _a.description,\n    withIcon = _a.withIcon,\n    iconSize = _a.iconSize,\n    size = _a.size,\n    radius = _a.radius,\n    loading = _a.loading,\n    allowStepClick = _a.allowStepClick,\n    allowStepSelect = _a.allowStepSelect,\n    iconPosition = _a.iconPosition,\n    __staticSelector = _a.__staticSelector,\n    classNames = _a.classNames,\n    styles = _a.styles,\n    unstyled = _a.unstyled,\n    orientation = _a.orientation,\n    variant = _a.variant,\n    others = __objRest(_a, [\"className\", \"step\", \"state\", \"color\", \"icon\", \"completedIcon\", \"progressIcon\", \"label\", \"description\", \"withIcon\", \"iconSize\", \"size\", \"radius\", \"loading\", \"allowStepClick\", \"allowStepSelect\", \"iconPosition\", \"__staticSelector\", \"classNames\", \"styles\", \"unstyled\", \"orientation\", \"variant\"]);\n  var _useStyles = useStyles({\n      color: color,\n      iconSize: iconSize,\n      radius: radius,\n      allowStepClick: allowStepClick,\n      iconPosition: iconPosition,\n      orientation: orientation\n    }, {\n      name: __staticSelector,\n      classNames: classNames,\n      styles: styles,\n      unstyled: unstyled,\n      variant: variant,\n      size: size\n    }),\n    classes = _useStyles.classes,\n    cx = _useStyles.cx;\n  var _iconSize = getSize({\n    size: size,\n    sizes: defaultIconSizes\n  });\n  var _icon = state === \"stepCompleted\" ? null : state === \"stepProgress\" ? progressIcon : icon;\n  var dataAttributes = {\n    \"data-progress\": state === \"stepProgress\" || void 0,\n    \"data-completed\": state === \"stepCompleted\" || void 0\n  };\n  return /* @__PURE__ */React.createElement(UnstyledButton, __spreadValues(__spreadValues({\n    className: cx(classes.step, className),\n    tabIndex: allowStepClick ? 0 : -1,\n    ref: ref\n  }, dataAttributes), others), withIcon && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.stepWrapper\n  }, /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    className: classes.stepIcon\n  }, dataAttributes), /* @__PURE__ */React.createElement(Transition, {\n    mounted: state === \"stepCompleted\",\n    transition: \"pop\",\n    duration: 200\n  }, function (transitionStyles) {\n    return /* @__PURE__ */React.createElement(\"div\", {\n      className: classes.stepCompletedIcon,\n      style: transitionStyles\n    }, loading ? /* @__PURE__ */React.createElement(Loader, {\n      color: \"#fff\",\n      size: _iconSize,\n      className: classes.stepLoader\n    }) : getStepFragment(completedIcon, step) || /* @__PURE__ */React.createElement(CheckboxIcon, {\n      indeterminate: false,\n      width: _iconSize,\n      height: _iconSize\n    }));\n  }), state !== \"stepCompleted\" ? loading ? /* @__PURE__ */React.createElement(Loader, {\n    size: _iconSize,\n    color: color\n  }) : getStepFragment(_icon || icon, step) : null), orientation === \"vertical\" && /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.verticalSeparator, _defineProperty({}, classes.verticalSeparatorActive, state === \"stepCompleted\"))\n  })), (label || description) && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.stepBody\n  }, label && /* @__PURE__ */React.createElement(Text, {\n    className: classes.stepLabel\n  }, getStepFragment(label, step)), description && /* @__PURE__ */React.createElement(Text, {\n    className: classes.stepDescription,\n    color: \"dimmed\"\n  }, getStepFragment(description, step))));\n});\nStep.displayName = \"@mantine/core/Step\";\nexport { Step };","map":null,"metadata":{},"sourceType":"module"}