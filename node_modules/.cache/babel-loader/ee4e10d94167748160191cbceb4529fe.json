{"ast":null,"code":"import _defineProperty from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"scope\", \"children\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createContext as $3bkAK$createContext, useMemo as $3bkAK$useMemo, createElement as $3bkAK$createElement, useContext as $3bkAK$useContext } from \"react\";\nfunction $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {\n  var Context = /*#__PURE__*/$3bkAK$createContext(defaultContext);\n  function Provider(props) {\n    var children = props.children,\n      context = _objectWithoutProperties(props, _excluded); // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var value = $3bkAK$useMemo(function () {\n      return context;\n    }, Object.values(context));\n    return /*#__PURE__*/$3bkAK$createElement(Context.Provider, {\n      value: value\n    }, children);\n  }\n  function useContext(consumerName) {\n    var context = $3bkAK$useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext; // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(\"`\".concat(consumerName, \"` must be used within `\").concat(rootComponentName, \"`\"));\n  }\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext];\n}\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\nfunction $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName) {\n  var createContextScopeDeps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var defaultContexts = [];\n  /* -----------------------------------------------------------------------------------------------\n  * createContext\n  * ---------------------------------------------------------------------------------------------*/\n  function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {\n    var BaseContext = /*#__PURE__*/$3bkAK$createContext(defaultContext);\n    var index = defaultContexts.length;\n    defaultContexts = [].concat(_toConsumableArray(defaultContexts), [defaultContext]);\n    function Provider(props) {\n      var scope = props.scope,\n        children = props.children,\n        context = _objectWithoutProperties(props, _excluded2);\n      var Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index]) || BaseContext; // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      var value = $3bkAK$useMemo(function () {\n        return context;\n      }, Object.values(context));\n      return /*#__PURE__*/$3bkAK$createElement(Context.Provider, {\n        value: value\n      }, children);\n    }\n    function useContext(consumerName, scope) {\n      var Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index]) || BaseContext;\n      var context = $3bkAK$useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext; // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(\"`\".concat(consumerName, \"` must be used within `\").concat(rootComponentName, \"`\"));\n    }\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext];\n  }\n  /* -----------------------------------------------------------------------------------------------\n  * createScope\n  * ---------------------------------------------------------------------------------------------*/\n  var createScope = function createScope() {\n    var scopeContexts = defaultContexts.map(function (defaultContext) {\n      return /*#__PURE__*/$3bkAK$createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      var contexts = (scope === null || scope === void 0 ? void 0 : scope[scopeName]) || scopeContexts;\n      return $3bkAK$useMemo(function () {\n        return _defineProperty({}, \"__scope\".concat(scopeName), _objectSpread(_objectSpread({}, scope), {}, _defineProperty({}, scopeName, contexts)));\n      }, [scope, contexts]);\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [$c512c27ab02ef895$export$fd42f52fd3ae1109, $c512c27ab02ef895$var$composeContextScopes.apply(void 0, [createScope].concat(_toConsumableArray(createContextScopeDeps)))];\n}\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\nfunction $c512c27ab02ef895$var$composeContextScopes() {\n  for (var _len = arguments.length, scopes = new Array(_len), _key = 0; _key < _len; _key++) {\n    scopes[_key] = arguments[_key];\n  }\n  var baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  var createScope1 = function createScope1() {\n    var scopeHooks = scopes.map(function (createScope) {\n      return {\n        useScope: createScope(),\n        scopeName: createScope.scopeName\n      };\n    });\n    return function useComposedScopes(overrideScopes) {\n      var nextScopes1 = scopeHooks.reduce(function (nextScopes, _ref2) {\n        var useScope = _ref2.useScope,\n          scopeName = _ref2.scopeName;\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var scopeProps = useScope(overrideScopes);\n        var currentScope = scopeProps[\"__scope\".concat(scopeName)];\n        return _objectSpread(_objectSpread({}, nextScopes), currentScope);\n      }, {});\n      return $3bkAK$useMemo(function () {\n        return _defineProperty({}, \"__scope\".concat(baseScope.scopeName), nextScopes1);\n      }, [nextScopes1]);\n    };\n  };\n  createScope1.scopeName = baseScope.scopeName;\n  return createScope1;\n}\nexport { $c512c27ab02ef895$export$fd42f52fd3ae1109 as createContext, $c512c27ab02ef895$export$50c7b4e9d9f19c1 as createContextScope };","map":null,"metadata":{},"sourceType":"module"}