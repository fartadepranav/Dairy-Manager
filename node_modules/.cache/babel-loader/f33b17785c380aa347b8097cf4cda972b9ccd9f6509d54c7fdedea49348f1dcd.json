{"ast":null,"code":"function escapeRegex(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n}\nfunction highlighter(value, _highlight) {\n  if (_highlight == null) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  var highlight = Array.isArray(_highlight) ? _highlight.map(escapeRegex) : escapeRegex(_highlight);\n  var shouldHighlight = Array.isArray(highlight) ? highlight.filter(function (part) {\n    return part.trim().length > 0;\n  }).length > 0 : highlight.trim() !== \"\";\n  if (!shouldHighlight) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  var matcher = typeof highlight === \"string\" ? highlight.trim() : highlight.filter(function (part) {\n    return part.trim().length !== 0;\n  }).map(function (part) {\n    return part.trim();\n  }).join(\"|\");\n  var re = new RegExp(\"(\".concat(matcher, \")\"), \"gi\");\n  var chunks = value.split(re).map(function (part) {\n    return {\n      chunk: part,\n      highlighted: re.test(part)\n    };\n  }).filter(function (_ref) {\n    var chunk = _ref.chunk;\n    return chunk;\n  });\n  return chunks;\n}\nexport { highlighter };","map":{"version":3,"names":["escapeRegex","value","replace","highlighter","_highlight","chunk","highlighted","highlight","Array","isArray","map","shouldHighlight","filter","part","trim","length","matcher","join","re","RegExp","concat","chunks","split","test","_ref"],"sources":["F:\\Dairy Project\\dairy_management\\node_modules\\@mantine\\core\\src\\Highlight\\highlighter\\highlighter.ts"],"sourcesContent":["function escapeRegex(value: string) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, '\\\\$&');\n}\n\nexport function highlighter(value: string, _highlight: string | string[]) {\n  if (_highlight == null) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const highlight = Array.isArray(_highlight)\n    ? _highlight.map(escapeRegex)\n    : escapeRegex(_highlight);\n\n  const shouldHighlight = Array.isArray(highlight)\n    ? highlight.filter((part) => part.trim().length > 0).length > 0\n    : highlight.trim() !== '';\n\n  if (!shouldHighlight) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const matcher =\n    typeof highlight === 'string'\n      ? highlight.trim()\n      : highlight\n          .filter((part) => part.trim().length !== 0)\n          .map((part) => part.trim())\n          .join('|');\n\n  const re = new RegExp(`(${matcher})`, 'gi');\n  const chunks = value\n    .split(re)\n    .map((part) => ({ chunk: part, highlighted: re.test(part) }))\n    .filter(({ chunk }) => chunk);\n\n  return chunks;\n}\n"],"mappings":"AAAA,SAASA,WAAWA,CAACC,KAAK,EAAE;EAC1B,OAAOA,KAAK,CAACC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAC;AACxD;AACO,SAASC,WAAWA,CAACF,KAAK,EAAEG,UAAU,EAAE;EAC7C,IAAIA,UAAU,IAAI,IAAI,EAAE;IACtB,OAAO,CAAC;MAAEC,KAAK,EAAEJ,KAAK;MAAEK,WAAW,EAAE;IAAK,CAAE,CAAC;EACjD;EACE,IAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,GAAGA,UAAU,CAACM,GAAG,CAACV,WAAW,CAAC,GAAGA,WAAW,CAACI,UAAU,CAAC;EACnG,IAAMO,eAAe,GAAGH,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,GAAGA,SAAS,CAACK,MAAM,CAAC,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC;EAAA,EAAC,CAACA,MAAM,GAAG,CAAC,GAAGR,SAAS,CAACO,IAAI,EAAE,KAAK,EAAE;EAC1I,IAAI,CAACH,eAAe,EAAE;IACpB,OAAO,CAAC;MAAEN,KAAK,EAAEJ,KAAK;MAAEK,WAAW,EAAE;IAAK,CAAE,CAAC;EACjD;EACE,IAAMU,OAAO,GAAG,OAAOT,SAAS,KAAK,QAAQ,GAAGA,SAAS,CAACO,IAAI,EAAE,GAAGP,SAAS,CAACK,MAAM,CAAC,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACC,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC;EAAA,EAAC,CAACL,GAAG,CAAC,UAACG,IAAI;IAAA,OAAKA,IAAI,CAACC,IAAI,EAAE;EAAA,EAAC,CAACG,IAAI,CAAC,GAAG,CAAC;EAC5J,IAAMC,EAAE,GAAG,IAAIC,MAAM,KAAAC,MAAA,CAAKJ,OAAO,QAAK,IAAI,CAAC;EAC3C,IAAMK,MAAM,GAAGpB,KAAK,CAACqB,KAAK,CAACJ,EAAE,CAAC,CAACR,GAAG,CAAC,UAACG,IAAI;IAAA,OAAM;MAAER,KAAK,EAAEQ,IAAI;MAAEP,WAAW,EAAEY,EAAE,CAACK,IAAI,CAACV,IAAI;IAAC,CAAE;EAAA,CAAC,CAAC,CAACD,MAAM,CAAC,UAAAY,IAAA;IAAA,IAAGnB,KAAK,GAAAmB,IAAA,CAALnB,KAAK;IAAA,OAAOA,KAAK;EAAA,EAAC;EACxH,OAAOgB,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}