{"ast":null,"code":"import _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport React, { forwardRef, useRef, useState } from 'react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { useComponentDefaultProps, rem, getSize } from '@mantine/styles';\nimport { ColorSwatch } from '../ColorSwatch/ColorSwatch.js';\nimport { HueSlider } from './HueSlider/HueSlider.js';\nimport { AlphaSlider } from './AlphaSlider/AlphaSlider.js';\nimport { Saturation } from './Saturation/Saturation.js';\nimport { Swatches } from './Swatches/Swatches.js';\nimport useStyles from './ColorPicker.styles.js';\nimport { parseColor, isColorValid } from './converters/parsers.js';\nimport { convertHsvaTo } from './converters/converters.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return target;\n};\nvar SWATCH_SIZES = {\n  xs: 26,\n  sm: 34,\n  md: 42,\n  lg: 50,\n  xl: 54\n};\nvar defaultProps = {\n  swatchesPerRow: 10,\n  size: \"sm\",\n  withPicker: true,\n  focusable: true,\n  __staticSelector: \"ColorPicker\"\n};\nvar ColorPicker = forwardRef(function (props, ref) {\n  var _a = useComponentDefaultProps(\"ColorPicker\", defaultProps, props),\n    value = _a.value,\n    defaultValue = _a.defaultValue,\n    onChange = _a.onChange,\n    _onChangeEnd = _a.onChangeEnd,\n    format = _a.format,\n    swatches = _a.swatches,\n    swatchesPerRow = _a.swatchesPerRow,\n    size = _a.size,\n    withPicker = _a.withPicker,\n    fullWidth = _a.fullWidth,\n    focusable = _a.focusable,\n    __staticSelector = _a.__staticSelector,\n    saturationLabel = _a.saturationLabel,\n    hueLabel = _a.hueLabel,\n    alphaLabel = _a.alphaLabel,\n    className = _a.className,\n    styles = _a.styles,\n    classNames = _a.classNames,\n    unstyled = _a.unstyled,\n    onColorSwatchClick = _a.onColorSwatchClick,\n    variant = _a.variant,\n    others = __objRest(_a, [\"value\", \"defaultValue\", \"onChange\", \"onChangeEnd\", \"format\", \"swatches\", \"swatchesPerRow\", \"size\", \"withPicker\", \"fullWidth\", \"focusable\", \"__staticSelector\", \"saturationLabel\", \"hueLabel\", \"alphaLabel\", \"className\", \"styles\", \"classNames\", \"unstyled\", \"onColorSwatchClick\", \"variant\"]);\n  var _useStyles = useStyles({\n      fullWidth: fullWidth\n    }, {\n      classNames: classNames,\n      styles: styles,\n      name: __staticSelector,\n      unstyled: unstyled,\n      variant: variant,\n      size: size\n    }),\n    classes = _useStyles.classes,\n    cx = _useStyles.cx;\n  var formatRef = useRef(format);\n  var valueRef = useRef(null);\n  var updateRef = useRef(true);\n  var withAlpha = format === \"hexa\" || format === \"rgba\" || format === \"hsla\";\n  var _useUncontrolled = useUncontrolled({\n      value: value,\n      defaultValue: defaultValue,\n      finalValue: \"#FFFFFF\",\n      onChange: onChange\n    }),\n    _useUncontrolled2 = _slicedToArray(_useUncontrolled, 3),\n    _value = _useUncontrolled2[0],\n    setValue = _useUncontrolled2[1],\n    controlled = _useUncontrolled2[2];\n  var _useState = useState(parseColor(_value)),\n    _useState2 = _slicedToArray(_useState, 2),\n    parsed = _useState2[0],\n    setParsed = _useState2[1];\n  var handleChange = function handleChange(color) {\n    updateRef.current = false;\n    setParsed(function (current) {\n      var next = __spreadValues(__spreadValues({}, current), color);\n      valueRef.current = convertHsvaTo(formatRef.current, next);\n      return next;\n    });\n    setValue(valueRef.current);\n    setTimeout(function () {\n      updateRef.current = true;\n    }, 0);\n  };\n  useDidUpdate(function () {\n    if (isColorValid(value) && updateRef.current) {\n      setParsed(parseColor(value));\n      updateRef.current = true;\n    }\n  }, [value]);\n  useDidUpdate(function () {\n    formatRef.current = format;\n    setValue(convertHsvaTo(format, parsed));\n  }, [format]);\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.wrapper, className),\n    ref: ref\n  }, others), withPicker && /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(Saturation, {\n    value: parsed,\n    onChange: handleChange,\n    onChangeEnd: function onChangeEnd(_ref) {\n      var s = _ref.s,\n        v = _ref.v;\n      return _onChangeEnd == null ? void 0 : _onChangeEnd(convertHsvaTo(formatRef.current, __spreadProps(__spreadValues({}, parsed), {\n        s: s,\n        v: v\n      })));\n    },\n    color: _value,\n    styles: styles,\n    classNames: classNames,\n    size: size,\n    focusable: focusable,\n    saturationLabel: saturationLabel,\n    __staticSelector: __staticSelector\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.body\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.sliders\n  }, /* @__PURE__ */React.createElement(HueSlider, {\n    value: parsed.h,\n    onChange: function onChange(h) {\n      return handleChange({\n        h: h\n      });\n    },\n    onChangeEnd: function onChangeEnd(h) {\n      return _onChangeEnd == null ? void 0 : _onChangeEnd(convertHsvaTo(formatRef.current, __spreadProps(__spreadValues({}, parsed), {\n        h: h\n      })));\n    },\n    size: size,\n    styles: styles,\n    classNames: classNames,\n    focusable: focusable,\n    \"aria-label\": hueLabel,\n    __staticSelector: __staticSelector\n  }), withAlpha && /* @__PURE__ */React.createElement(AlphaSlider, {\n    value: parsed.a,\n    onChange: function onChange(a) {\n      return handleChange({\n        a: a\n      });\n    },\n    onChangeEnd: function onChangeEnd(a) {\n      _onChangeEnd == null ? void 0 : _onChangeEnd(convertHsvaTo(formatRef.current, __spreadProps(__spreadValues({}, parsed), {\n        a: a\n      })));\n    },\n    size: size,\n    color: convertHsvaTo(\"hex\", parsed),\n    style: {\n      marginTop: rem(6)\n    },\n    styles: styles,\n    classNames: classNames,\n    focusable: focusable,\n    \"aria-label\": alphaLabel,\n    __staticSelector: __staticSelector\n  })), withAlpha && /* @__PURE__ */React.createElement(ColorSwatch, {\n    color: _value,\n    radius: \"sm\",\n    size: getSize({\n      size: size,\n      sizes: SWATCH_SIZES\n    }),\n    className: classes.preview\n  }))), Array.isArray(swatches) && /* @__PURE__ */React.createElement(Swatches, {\n    data: swatches,\n    style: {\n      marginTop: rem(5)\n    },\n    swatchesPerRow: swatchesPerRow,\n    focusable: focusable,\n    classNames: classNames,\n    styles: styles,\n    __staticSelector: __staticSelector,\n    setValue: setValue,\n    onChangeEnd: function onChangeEnd(color) {\n      var convertedColor = convertHsvaTo(format, parseColor(color));\n      onColorSwatchClick == null ? void 0 : onColorSwatchClick(convertedColor);\n      _onChangeEnd == null ? void 0 : _onChangeEnd(convertedColor);\n      if (!controlled) {\n        setParsed(parseColor(color));\n      }\n    }\n  }));\n});\nColorPicker.displayName = \"@mantine/core/ColorPicker\";\nexport { ColorPicker };","map":null,"metadata":{},"sourceType":"module"}