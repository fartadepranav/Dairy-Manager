{"ast":null,"code":"import _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useCallback } from 'react';\nfunction useDisclosure() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var callbacks = arguments.length > 1 ? arguments[1] : undefined;\n  var _ref = callbacks || {},\n    onOpen = _ref.onOpen,\n    onClose = _ref.onClose;\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    opened = _useState2[0],\n    setOpened = _useState2[1];\n  var open = useCallback(function () {\n    setOpened(function (isOpened) {\n      if (!isOpened) {\n        onOpen == null ? void 0 : onOpen();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [onOpen]);\n  var close = useCallback(function () {\n    setOpened(function (isOpened) {\n      if (isOpened) {\n        onClose == null ? void 0 : onClose();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [onClose]);\n  var toggle = useCallback(function () {\n    opened ? close() : open();\n  }, [close, open, opened]);\n  return [opened, {\n    open: open,\n    close: close,\n    toggle: toggle\n  }];\n}\nexport { useDisclosure };","map":null,"metadata":{},"sourceType":"module"}