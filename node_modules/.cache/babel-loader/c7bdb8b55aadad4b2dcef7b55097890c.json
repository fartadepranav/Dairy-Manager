{"ast":null,"code":"import _defineProperty from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"F:\\\\Dairy Project\\\\dairy_management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport $fnFM9$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $fnFM9$forwardRef, useState as $fnFM9$useState, createElement as $fnFM9$createElement, useRef as $fnFM9$useRef, Fragment as $fnFM9$Fragment, useEffect as $fnFM9$useEffect, useCallback as $fnFM9$useCallback, useReducer as $fnFM9$useReducer } from \"react\";\nimport { Primitive as $fnFM9$Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence as $fnFM9$Presence } from \"@radix-ui/react-presence\";\nimport { createContextScope as $fnFM9$createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs as $fnFM9$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef as $fnFM9$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useDirection as $fnFM9$useDirection } from \"@radix-ui/react-direction\";\nimport { useLayoutEffect as $fnFM9$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { clamp as $fnFM9$clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers as $fnFM9$composeEventHandlers } from \"@radix-ui/primitive\";\nfunction $6c2e24571c90391f$export$3e6543de14f8614f(initialState, machine) {\n  return $fnFM9$useReducer(function (state, event) {\n    var nextState = machine[state][event];\n    return nextState !== null && nextState !== void 0 ? nextState : state;\n  }, initialState);\n}\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollArea\n * -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$SCROLL_AREA_NAME = 'ScrollArea';\nvar _$fnFM9$createContext = $fnFM9$createContextScope($57acba87d6e25586$var$SCROLL_AREA_NAME),\n  _$fnFM9$createContext2 = _slicedToArray(_$fnFM9$createContext, 2),\n  $57acba87d6e25586$var$createScrollAreaContext = _$fnFM9$createContext2[0],\n  $57acba87d6e25586$export$488468afe3a6f2b1 = _$fnFM9$createContext2[1];\nvar _$57acba87d6e25586$va = $57acba87d6e25586$var$createScrollAreaContext($57acba87d6e25586$var$SCROLL_AREA_NAME),\n  _$57acba87d6e25586$va2 = _slicedToArray(_$57acba87d6e25586$va, 2),\n  $57acba87d6e25586$var$ScrollAreaProvider = _$57acba87d6e25586$va2[0],\n  $57acba87d6e25586$var$useScrollAreaContext = _$57acba87d6e25586$va2[1];\nvar $57acba87d6e25586$export$ccf8d8d7bbf3c2cc = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var _objectSpread2;\n  var __scopeScrollArea = props.__scopeScrollArea,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'hover' : _props$type,\n    dir = props.dir,\n    _props$scrollHideDela = props.scrollHideDelay,\n    scrollHideDelay = _props$scrollHideDela === void 0 ? 600 : _props$scrollHideDela,\n    scrollAreaProps = _objectWithoutProperties(props, [\"__scopeScrollArea\", \"type\", \"dir\", \"scrollHideDelay\"]);\n  var _$fnFM9$useState = $fnFM9$useState(null),\n    _$fnFM9$useState2 = _slicedToArray(_$fnFM9$useState, 2),\n    scrollArea = _$fnFM9$useState2[0],\n    setScrollArea = _$fnFM9$useState2[1];\n  var _$fnFM9$useState3 = $fnFM9$useState(null),\n    _$fnFM9$useState4 = _slicedToArray(_$fnFM9$useState3, 2),\n    viewport = _$fnFM9$useState4[0],\n    setViewport = _$fnFM9$useState4[1];\n  var _$fnFM9$useState5 = $fnFM9$useState(null),\n    _$fnFM9$useState6 = _slicedToArray(_$fnFM9$useState5, 2),\n    content = _$fnFM9$useState6[0],\n    setContent = _$fnFM9$useState6[1];\n  var _$fnFM9$useState7 = $fnFM9$useState(null),\n    _$fnFM9$useState8 = _slicedToArray(_$fnFM9$useState7, 2),\n    scrollbarX = _$fnFM9$useState8[0],\n    setScrollbarX = _$fnFM9$useState8[1];\n  var _$fnFM9$useState9 = $fnFM9$useState(null),\n    _$fnFM9$useState10 = _slicedToArray(_$fnFM9$useState9, 2),\n    scrollbarY = _$fnFM9$useState10[0],\n    setScrollbarY = _$fnFM9$useState10[1];\n  var _$fnFM9$useState11 = $fnFM9$useState(0),\n    _$fnFM9$useState12 = _slicedToArray(_$fnFM9$useState11, 2),\n    cornerWidth = _$fnFM9$useState12[0],\n    setCornerWidth = _$fnFM9$useState12[1];\n  var _$fnFM9$useState13 = $fnFM9$useState(0),\n    _$fnFM9$useState14 = _slicedToArray(_$fnFM9$useState13, 2),\n    cornerHeight = _$fnFM9$useState14[0],\n    setCornerHeight = _$fnFM9$useState14[1];\n  var _$fnFM9$useState15 = $fnFM9$useState(false),\n    _$fnFM9$useState16 = _slicedToArray(_$fnFM9$useState15, 2),\n    scrollbarXEnabled = _$fnFM9$useState16[0],\n    setScrollbarXEnabled = _$fnFM9$useState16[1];\n  var _$fnFM9$useState17 = $fnFM9$useState(false),\n    _$fnFM9$useState18 = _slicedToArray(_$fnFM9$useState17, 2),\n    scrollbarYEnabled = _$fnFM9$useState18[0],\n    setScrollbarYEnabled = _$fnFM9$useState18[1];\n  var composedRefs = $fnFM9$useComposedRefs(forwardedRef, function (node) {\n    return setScrollArea(node);\n  });\n  var direction = $fnFM9$useDirection(dir);\n  return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaProvider, {\n    scope: __scopeScrollArea,\n    type: type,\n    dir: direction,\n    scrollHideDelay: scrollHideDelay,\n    scrollArea: scrollArea,\n    viewport: viewport,\n    onViewportChange: setViewport,\n    content: content,\n    onContentChange: setContent,\n    scrollbarX: scrollbarX,\n    onScrollbarXChange: setScrollbarX,\n    scrollbarXEnabled: scrollbarXEnabled,\n    onScrollbarXEnabledChange: setScrollbarXEnabled,\n    scrollbarY: scrollbarY,\n    onScrollbarYChange: setScrollbarY,\n    scrollbarYEnabled: scrollbarYEnabled,\n    onScrollbarYEnabledChange: setScrollbarYEnabled,\n    onCornerWidthChange: setCornerWidth,\n    onCornerHeightChange: setCornerHeight\n  }, /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({\n    dir: direction\n  }, scrollAreaProps, {\n    ref: composedRefs,\n    style: _objectSpread((_objectSpread2 = {\n      position: 'relative'\n    }, _defineProperty(_objectSpread2, '--radix-scroll-area-corner-width', cornerWidth + 'px'), _defineProperty(_objectSpread2, '--radix-scroll-area-corner-height', cornerHeight + 'px'), _objectSpread2), props.style)\n  })));\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$ccf8d8d7bbf3c2cc, {\n  displayName: $57acba87d6e25586$var$SCROLL_AREA_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaViewport\n * -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$VIEWPORT_NAME = 'ScrollAreaViewport';\nvar $57acba87d6e25586$export$a21cbf9f11fca853 = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var __scopeScrollArea = props.__scopeScrollArea,\n    children = props.children,\n    viewportProps = _objectWithoutProperties(props, [\"__scopeScrollArea\", \"children\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$VIEWPORT_NAME, __scopeScrollArea);\n  var ref = $fnFM9$useRef(null);\n  var composedRefs = $fnFM9$useComposedRefs(forwardedRef, ref, context.onViewportChange);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Fragment, null, /*#__PURE__*/$fnFM9$createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: \"[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}\"\n    }\n  }), /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({\n    \"data-radix-scroll-area-viewport\": \"\"\n  }, viewportProps, {\n    ref: composedRefs,\n    style: _objectSpread({\n      /**\n      * We don't support `visible` because the intention is to have at least one scrollbar\n      * if this component is used and `visible` will behave like `auto` in that case\n      * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n      *\n      * We don't handle `auto` because the intention is for the native implementation\n      * to be hidden if using this component. We just want to ensure the node is scrollable\n      * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n      * the browser from having to work out whether to render native scrollbars or not,\n      * we tell it to with the intention of hiding them in CSS.\n      */\n      overflowX: context.scrollbarXEnabled ? 'scroll' : 'hidden',\n      overflowY: context.scrollbarYEnabled ? 'scroll' : 'hidden'\n    }, props.style)\n  }), /*#__PURE__*/$fnFM9$createElement(\"div\", {\n    ref: context.onContentChange,\n    style: {\n      minWidth: '100%',\n      display: 'table'\n    }\n  }, children)));\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$a21cbf9f11fca853, {\n  displayName: $57acba87d6e25586$var$VIEWPORT_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaScrollbar\n * -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$SCROLLBAR_NAME = 'ScrollAreaScrollbar';\nvar $57acba87d6e25586$export$2fabd85d0eba3c57 = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var forceMount = props.forceMount,\n    scrollbarProps = _objectWithoutProperties(props, [\"forceMount\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  var onScrollbarXEnabledChange = context.onScrollbarXEnabledChange,\n    onScrollbarYEnabledChange = context.onScrollbarYEnabledChange;\n  var isHorizontal = props.orientation === 'horizontal';\n  $fnFM9$useEffect(function () {\n    isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n    return function () {\n      isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n    };\n  }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n  return context.type === 'hover' ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarHover, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: forwardedRef,\n    forceMount: forceMount\n  })) : context.type === 'scroll' ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarScroll, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: forwardedRef,\n    forceMount: forceMount\n  })) : context.type === 'auto' ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarAuto, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: forwardedRef,\n    forceMount: forceMount\n  })) : context.type === 'always' ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: forwardedRef\n  })) : null;\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$2fabd85d0eba3c57, {\n  displayName: $57acba87d6e25586$var$SCROLLBAR_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$ScrollAreaScrollbarHover = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var forceMount = props.forceMount,\n    scrollbarProps = _objectWithoutProperties(props, [\"forceMount\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  var _$fnFM9$useState19 = $fnFM9$useState(false),\n    _$fnFM9$useState20 = _slicedToArray(_$fnFM9$useState19, 2),\n    visible = _$fnFM9$useState20[0],\n    setVisible = _$fnFM9$useState20[1];\n  $fnFM9$useEffect(function () {\n    var scrollArea = context.scrollArea;\n    var hideTimer = 0;\n    if (scrollArea) {\n      var handlePointerEnter = function handlePointerEnter() {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      var handlePointerLeave = function handlePointerLeave() {\n        hideTimer = window.setTimeout(function () {\n          return setVisible(false);\n        }, context.scrollHideDelay);\n      };\n      scrollArea.addEventListener('pointerenter', handlePointerEnter);\n      scrollArea.addEventListener('pointerleave', handlePointerLeave);\n      return function () {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n        scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Presence, {\n    present: forceMount || visible\n  }, /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarAuto, $fnFM9$babelruntimehelpersesmextends({\n    \"data-state\": visible ? 'visible' : 'hidden'\n  }, scrollbarProps, {\n    ref: forwardedRef\n  })));\n});\nvar $57acba87d6e25586$var$ScrollAreaScrollbarScroll = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var forceMount = props.forceMount,\n    scrollbarProps = _objectWithoutProperties(props, [\"forceMount\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  var isHorizontal = props.orientation === 'horizontal';\n  var debounceScrollEnd = $57acba87d6e25586$var$useDebounceCallback(function () {\n    return send('SCROLL_END');\n  }, 100);\n  var _$6c2e24571c90391f$ex = $6c2e24571c90391f$export$3e6543de14f8614f('hidden', {\n      hidden: {\n        SCROLL: 'scrolling'\n      },\n      scrolling: {\n        SCROLL_END: 'idle',\n        POINTER_ENTER: 'interacting'\n      },\n      interacting: {\n        SCROLL: 'interacting',\n        POINTER_LEAVE: 'idle'\n      },\n      idle: {\n        HIDE: 'hidden',\n        SCROLL: 'scrolling',\n        POINTER_ENTER: 'interacting'\n      }\n    }),\n    _$6c2e24571c90391f$ex2 = _slicedToArray(_$6c2e24571c90391f$ex, 2),\n    state = _$6c2e24571c90391f$ex2[0],\n    send = _$6c2e24571c90391f$ex2[1];\n  $fnFM9$useEffect(function () {\n    if (state === 'idle') {\n      var hideTimer = window.setTimeout(function () {\n        return send('HIDE');\n      }, context.scrollHideDelay);\n      return function () {\n        return window.clearTimeout(hideTimer);\n      };\n    }\n  }, [state, context.scrollHideDelay, send]);\n  $fnFM9$useEffect(function () {\n    var viewport = context.viewport;\n    var scrollDirection = isHorizontal ? 'scrollLeft' : 'scrollTop';\n    if (viewport) {\n      var prevScrollPos = viewport[scrollDirection];\n      var handleScroll = function handleScroll() {\n        var scrollPos = viewport[scrollDirection];\n        var hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send('SCROLL');\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener('scroll', handleScroll);\n      return function () {\n        return viewport.removeEventListener('scroll', handleScroll);\n      };\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Presence, {\n    present: forceMount || state !== 'hidden'\n  }, /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, $fnFM9$babelruntimehelpersesmextends({\n    \"data-state\": state === 'hidden' ? 'hidden' : 'visible'\n  }, scrollbarProps, {\n    ref: forwardedRef,\n    onPointerEnter: $fnFM9$composeEventHandlers(props.onPointerEnter, function () {\n      return send('POINTER_ENTER');\n    }),\n    onPointerLeave: $fnFM9$composeEventHandlers(props.onPointerLeave, function () {\n      return send('POINTER_LEAVE');\n    })\n  })));\n});\nvar $57acba87d6e25586$var$ScrollAreaScrollbarAuto = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  var forceMount = props.forceMount,\n    scrollbarProps = _objectWithoutProperties(props, [\"forceMount\"]);\n  var _$fnFM9$useState21 = $fnFM9$useState(false),\n    _$fnFM9$useState22 = _slicedToArray(_$fnFM9$useState21, 2),\n    visible = _$fnFM9$useState22[0],\n    setVisible = _$fnFM9$useState22[1];\n  var isHorizontal = props.orientation === 'horizontal';\n  var handleResize = $57acba87d6e25586$var$useDebounceCallback(function () {\n    if (context.viewport) {\n      var isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      var isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n  $57acba87d6e25586$var$useResizeObserver(context.viewport, handleResize);\n  $57acba87d6e25586$var$useResizeObserver(context.content, handleResize);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Presence, {\n    present: forceMount || visible\n  }, /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, $fnFM9$babelruntimehelpersesmextends({\n    \"data-state\": visible ? 'visible' : 'hidden'\n  }, scrollbarProps, {\n    ref: forwardedRef\n  })));\n});\n/* -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$ScrollAreaScrollbarVisible = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? 'vertical' : _props$orientation,\n    scrollbarProps = _objectWithoutProperties(props, [\"orientation\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  var thumbRef = $fnFM9$useRef(null);\n  var pointerOffsetRef = $fnFM9$useRef(0);\n  var _$fnFM9$useState23 = $fnFM9$useState({\n      content: 0,\n      viewport: 0,\n      scrollbar: {\n        size: 0,\n        paddingStart: 0,\n        paddingEnd: 0\n      }\n    }),\n    _$fnFM9$useState24 = _slicedToArray(_$fnFM9$useState23, 2),\n    sizes = _$fnFM9$useState24[0],\n    setSizes = _$fnFM9$useState24[1];\n  var thumbRatio = $57acba87d6e25586$var$getThumbRatio(sizes.viewport, sizes.content);\n  var commonProps = _objectSpread({}, scrollbarProps, {\n    sizes: sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: function onThumbChange(thumb) {\n      return thumbRef.current = thumb;\n    },\n    onThumbPointerUp: function onThumbPointerUp() {\n      return pointerOffsetRef.current = 0;\n    },\n    onThumbPointerDown: function onThumbPointerDown(pointerPos) {\n      return pointerOffsetRef.current = pointerPos;\n    }\n  });\n  function getScrollPosition(pointerPos, dir) {\n    return $57acba87d6e25586$var$getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n  if (orientation === 'horizontal') return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarX, $fnFM9$babelruntimehelpersesmextends({}, commonProps, {\n    ref: forwardedRef,\n    onThumbPositionChange: function onThumbPositionChange() {\n      if (context.viewport && thumbRef.current) {\n        var scrollPos = context.viewport.scrollLeft;\n        var offset = $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n        thumbRef.current.style.transform = \"translate3d(\".concat(offset, \"px, 0, 0)\");\n      }\n    },\n    onWheelScroll: function onWheelScroll(scrollPos) {\n      if (context.viewport) context.viewport.scrollLeft = scrollPos;\n    },\n    onDragScroll: function onDragScroll(pointerPos) {\n      if (context.viewport) context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n    }\n  }));\n  if (orientation === 'vertical') return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarY, $fnFM9$babelruntimehelpersesmextends({}, commonProps, {\n    ref: forwardedRef,\n    onThumbPositionChange: function onThumbPositionChange() {\n      if (context.viewport && thumbRef.current) {\n        var scrollPos = context.viewport.scrollTop;\n        var offset = $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes);\n        thumbRef.current.style.transform = \"translate3d(0, \".concat(offset, \"px, 0)\");\n      }\n    },\n    onWheelScroll: function onWheelScroll(scrollPos) {\n      if (context.viewport) context.viewport.scrollTop = scrollPos;\n    },\n    onDragScroll: function onDragScroll(pointerPos) {\n      if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n    }\n  }));\n  return null;\n});\n/* -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$ScrollAreaScrollbarX = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var sizes = props.sizes,\n    onSizesChange = props.onSizesChange,\n    scrollbarProps = _objectWithoutProperties(props, [\"sizes\", \"onSizesChange\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  var _$fnFM9$useState25 = $fnFM9$useState(),\n    _$fnFM9$useState26 = _slicedToArray(_$fnFM9$useState25, 2),\n    computedStyle = _$fnFM9$useState26[0],\n    setComputedStyle = _$fnFM9$useState26[1];\n  var ref = $fnFM9$useRef(null);\n  var composeRefs = $fnFM9$useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n  $fnFM9$useEffect(function () {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarImpl, $fnFM9$babelruntimehelpersesmextends({\n    \"data-orientation\": \"horizontal\"\n  }, scrollbarProps, {\n    ref: composeRefs,\n    sizes: sizes,\n    style: _objectSpread(_defineProperty({\n      bottom: 0,\n      left: context.dir === 'rtl' ? 'var(--radix-scroll-area-corner-width)' : 0,\n      right: context.dir === 'ltr' ? 'var(--radix-scroll-area-corner-width)' : 0\n    }, '--radix-scroll-area-thumb-width', $57acba87d6e25586$var$getThumbSize(sizes) + 'px'), props.style),\n    onThumbPointerDown: function onThumbPointerDown(pointerPos) {\n      return props.onThumbPointerDown(pointerPos.x);\n    },\n    onDragScroll: function onDragScroll(pointerPos) {\n      return props.onDragScroll(pointerPos.x);\n    },\n    onWheelScroll: function onWheelScroll(event, maxScrollPos) {\n      if (context.viewport) {\n        var scrollPos = context.viewport.scrollLeft + event.deltaX;\n        props.onWheelScroll(scrollPos); // prevent window scroll when wheeling on scrollbar\n        if ($57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) event.preventDefault();\n      }\n    },\n    onResize: function onResize() {\n      if (ref.current && context.viewport && computedStyle) onSizesChange({\n        content: context.viewport.scrollWidth,\n        viewport: context.viewport.offsetWidth,\n        scrollbar: {\n          size: ref.current.clientWidth,\n          paddingStart: $57acba87d6e25586$var$toInt(computedStyle.paddingLeft),\n          paddingEnd: $57acba87d6e25586$var$toInt(computedStyle.paddingRight)\n        }\n      });\n    }\n  }));\n});\nvar $57acba87d6e25586$var$ScrollAreaScrollbarY = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var sizes = props.sizes,\n    onSizesChange = props.onSizesChange,\n    scrollbarProps = _objectWithoutProperties(props, [\"sizes\", \"onSizesChange\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  var _$fnFM9$useState27 = $fnFM9$useState(),\n    _$fnFM9$useState28 = _slicedToArray(_$fnFM9$useState27, 2),\n    computedStyle = _$fnFM9$useState28[0],\n    setComputedStyle = _$fnFM9$useState28[1];\n  var ref = $fnFM9$useRef(null);\n  var composeRefs = $fnFM9$useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n  $fnFM9$useEffect(function () {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarImpl, $fnFM9$babelruntimehelpersesmextends({\n    \"data-orientation\": \"vertical\"\n  }, scrollbarProps, {\n    ref: composeRefs,\n    sizes: sizes,\n    style: _objectSpread(_defineProperty({\n      top: 0,\n      right: context.dir === 'ltr' ? 0 : undefined,\n      left: context.dir === 'rtl' ? 0 : undefined,\n      bottom: 'var(--radix-scroll-area-corner-height)'\n    }, '--radix-scroll-area-thumb-height', $57acba87d6e25586$var$getThumbSize(sizes) + 'px'), props.style),\n    onThumbPointerDown: function onThumbPointerDown(pointerPos) {\n      return props.onThumbPointerDown(pointerPos.y);\n    },\n    onDragScroll: function onDragScroll(pointerPos) {\n      return props.onDragScroll(pointerPos.y);\n    },\n    onWheelScroll: function onWheelScroll(event, maxScrollPos) {\n      if (context.viewport) {\n        var scrollPos = context.viewport.scrollTop + event.deltaY;\n        props.onWheelScroll(scrollPos); // prevent window scroll when wheeling on scrollbar\n        if ($57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) event.preventDefault();\n      }\n    },\n    onResize: function onResize() {\n      if (ref.current && context.viewport && computedStyle) onSizesChange({\n        content: context.viewport.scrollHeight,\n        viewport: context.viewport.offsetHeight,\n        scrollbar: {\n          size: ref.current.clientHeight,\n          paddingStart: $57acba87d6e25586$var$toInt(computedStyle.paddingTop),\n          paddingEnd: $57acba87d6e25586$var$toInt(computedStyle.paddingBottom)\n        }\n      });\n    }\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\nvar _$57acba87d6e25586$va3 = $57acba87d6e25586$var$createScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME),\n  _$57acba87d6e25586$va4 = _slicedToArray(_$57acba87d6e25586$va3, 2),\n  $57acba87d6e25586$var$ScrollbarProvider = _$57acba87d6e25586$va4[0],\n  $57acba87d6e25586$var$useScrollbarContext = _$57acba87d6e25586$va4[1];\nvar $57acba87d6e25586$var$ScrollAreaScrollbarImpl = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var __scopeScrollArea = props.__scopeScrollArea,\n    sizes = props.sizes,\n    hasThumb = props.hasThumb,\n    onThumbChange = props.onThumbChange,\n    onThumbPointerUp = props.onThumbPointerUp,\n    onThumbPointerDown = props.onThumbPointerDown,\n    onThumbPositionChange = props.onThumbPositionChange,\n    onDragScroll = props.onDragScroll,\n    onWheelScroll = props.onWheelScroll,\n    onResize = props.onResize,\n    scrollbarProps = _objectWithoutProperties(props, [\"__scopeScrollArea\", \"sizes\", \"hasThumb\", \"onThumbChange\", \"onThumbPointerUp\", \"onThumbPointerDown\", \"onThumbPositionChange\", \"onDragScroll\", \"onWheelScroll\", \"onResize\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, __scopeScrollArea);\n  var _$fnFM9$useState29 = $fnFM9$useState(null),\n    _$fnFM9$useState30 = _slicedToArray(_$fnFM9$useState29, 2),\n    scrollbar = _$fnFM9$useState30[0],\n    setScrollbar = _$fnFM9$useState30[1];\n  var composeRefs = $fnFM9$useComposedRefs(forwardedRef, function (node) {\n    return setScrollbar(node);\n  });\n  var rectRef = $fnFM9$useRef(null);\n  var prevWebkitUserSelectRef = $fnFM9$useRef('');\n  var viewport = context.viewport;\n  var maxScrollPos = sizes.content - sizes.viewport;\n  var handleWheelScroll = $fnFM9$useCallbackRef(onWheelScroll);\n  var handleThumbPositionChange = $fnFM9$useCallbackRef(onThumbPositionChange);\n  var handleResize = $57acba87d6e25586$var$useDebounceCallback(onResize, 10);\n  function handleDragScroll(event) {\n    if (rectRef.current) {\n      var x = event.clientX - rectRef.current.left;\n      var y = event.clientY - rectRef.current.top;\n      onDragScroll({\n        x: x,\n        y: y\n      });\n    }\n  }\n  /**\n  * We bind wheel event imperatively so we can switch off passive\n  * mode for document wheel event to allow it to be prevented\n  */\n  $fnFM9$useEffect(function () {\n    var handleWheel = function handleWheel(event) {\n      var element = event.target;\n      var isScrollbarWheel = scrollbar === null || scrollbar === void 0 ? void 0 : scrollbar.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return function () {\n      return document.removeEventListener('wheel', handleWheel, {\n        passive: false\n      });\n    };\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n  /**\n  * Update thumb position on sizes change\n  */\n  $fnFM9$useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n  $57acba87d6e25586$var$useResizeObserver(scrollbar, handleResize);\n  $57acba87d6e25586$var$useResizeObserver(context.content, handleResize);\n  return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollbarProvider, {\n    scope: __scopeScrollArea,\n    scrollbar: scrollbar,\n    hasThumb: hasThumb,\n    onThumbChange: $fnFM9$useCallbackRef(onThumbChange),\n    onThumbPointerUp: $fnFM9$useCallbackRef(onThumbPointerUp),\n    onThumbPositionChange: handleThumbPositionChange,\n    onThumbPointerDown: $fnFM9$useCallbackRef(onThumbPointerDown)\n  }, /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: composeRefs,\n    style: _objectSpread({\n      position: 'absolute'\n    }, scrollbarProps.style),\n    onPointerDown: $fnFM9$composeEventHandlers(props.onPointerDown, function (event) {\n      var mainPointer = 0;\n      if (event.button === mainPointer) {\n        var element = event.target;\n        element.setPointerCapture(event.pointerId);\n        rectRef.current = scrollbar.getBoundingClientRect(); // pointer capture doesn't prevent text selection in Safari\n        // so we remove text selection manually when scrolling\n        prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n        document.body.style.webkitUserSelect = 'none';\n        handleDragScroll(event);\n      }\n    }),\n    onPointerMove: $fnFM9$composeEventHandlers(props.onPointerMove, handleDragScroll),\n    onPointerUp: $fnFM9$composeEventHandlers(props.onPointerUp, function (event) {\n      var element = event.target;\n      if (element.hasPointerCapture(event.pointerId)) element.releasePointerCapture(event.pointerId);\n      document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n      rectRef.current = null;\n    })\n  })));\n});\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaThumb\n * -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$THUMB_NAME = 'ScrollAreaThumb';\nvar $57acba87d6e25586$export$9fba1154677d7cd2 = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var forceMount = props.forceMount,\n    thumbProps = _objectWithoutProperties(props, [\"forceMount\"]);\n  var scrollbarContext = $57acba87d6e25586$var$useScrollbarContext($57acba87d6e25586$var$THUMB_NAME, props.__scopeScrollArea);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Presence, {\n    present: forceMount || scrollbarContext.hasThumb\n  }, /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaThumbImpl, $fnFM9$babelruntimehelpersesmextends({\n    ref: forwardedRef\n  }, thumbProps)));\n});\nvar $57acba87d6e25586$var$ScrollAreaThumbImpl = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var __scopeScrollArea = props.__scopeScrollArea,\n    style = props.style,\n    thumbProps = _objectWithoutProperties(props, [\"__scopeScrollArea\", \"style\"]);\n  var scrollAreaContext = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$THUMB_NAME, __scopeScrollArea);\n  var scrollbarContext = $57acba87d6e25586$var$useScrollbarContext($57acba87d6e25586$var$THUMB_NAME, __scopeScrollArea);\n  var onThumbPositionChange = scrollbarContext.onThumbPositionChange;\n  var composedRef = $fnFM9$useComposedRefs(forwardedRef, function (node) {\n    return scrollbarContext.onThumbChange(node);\n  });\n  var removeUnlinkedScrollListenerRef = $fnFM9$useRef();\n  var debounceScrollEnd = $57acba87d6e25586$var$useDebounceCallback(function () {\n    if (removeUnlinkedScrollListenerRef.current) {\n      removeUnlinkedScrollListenerRef.current();\n      removeUnlinkedScrollListenerRef.current = undefined;\n    }\n  }, 100);\n  $fnFM9$useEffect(function () {\n    var viewport = scrollAreaContext.viewport;\n    if (viewport) {\n      /**\n      * We only bind to native scroll event so we know when scroll starts and ends.\n      * When scroll starts we start a requestAnimationFrame loop that checks for\n      * changes to scroll position. That rAF loop triggers our thumb position change\n      * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n      * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n      */\n      var handleScroll = function handleScroll() {\n        debounceScrollEnd();\n        if (!removeUnlinkedScrollListenerRef.current) {\n          var listener = $57acba87d6e25586$var$addUnlinkedScrollListener(viewport, onThumbPositionChange);\n          removeUnlinkedScrollListenerRef.current = listener;\n          onThumbPositionChange();\n        }\n      };\n      onThumbPositionChange();\n      viewport.addEventListener('scroll', handleScroll);\n      return function () {\n        return viewport.removeEventListener('scroll', handleScroll);\n      };\n    }\n  }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({\n    \"data-state\": scrollbarContext.hasThumb ? 'visible' : 'hidden'\n  }, thumbProps, {\n    ref: composedRef,\n    style: _objectSpread({\n      width: 'var(--radix-scroll-area-thumb-width)',\n      height: 'var(--radix-scroll-area-thumb-height)'\n    }, style),\n    onPointerDownCapture: $fnFM9$composeEventHandlers(props.onPointerDownCapture, function (event) {\n      var thumb = event.target;\n      var thumbRect = thumb.getBoundingClientRect();\n      var x = event.clientX - thumbRect.left;\n      var y = event.clientY - thumbRect.top;\n      scrollbarContext.onThumbPointerDown({\n        x: x,\n        y: y\n      });\n    }),\n    onPointerUp: $fnFM9$composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n  }));\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$9fba1154677d7cd2, {\n  displayName: $57acba87d6e25586$var$THUMB_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaCorner\n * -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$CORNER_NAME = 'ScrollAreaCorner';\nvar $57acba87d6e25586$export$56969d565df7cc4b = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$CORNER_NAME, props.__scopeScrollArea);\n  var hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n  var hasCorner = context.type !== 'scroll' && hasBothScrollbarsVisible;\n  return hasCorner ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaCornerImpl, $fnFM9$babelruntimehelpersesmextends({}, props, {\n    ref: forwardedRef\n  })) : null;\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$56969d565df7cc4b, {\n  displayName: $57acba87d6e25586$var$CORNER_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$var$ScrollAreaCornerImpl = /*#__PURE__*/$fnFM9$forwardRef(function (props, forwardedRef) {\n  var __scopeScrollArea = props.__scopeScrollArea,\n    cornerProps = _objectWithoutProperties(props, [\"__scopeScrollArea\"]);\n  var context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$CORNER_NAME, __scopeScrollArea);\n  var _$fnFM9$useState31 = $fnFM9$useState(0),\n    _$fnFM9$useState32 = _slicedToArray(_$fnFM9$useState31, 2),\n    width1 = _$fnFM9$useState32[0],\n    setWidth = _$fnFM9$useState32[1];\n  var _$fnFM9$useState33 = $fnFM9$useState(0),\n    _$fnFM9$useState34 = _slicedToArray(_$fnFM9$useState33, 2),\n    height1 = _$fnFM9$useState34[0],\n    setHeight = _$fnFM9$useState34[1];\n  var hasSize = Boolean(width1 && height1);\n  $57acba87d6e25586$var$useResizeObserver(context.scrollbarX, function () {\n    var _context$scrollbarX;\n    var height = ((_context$scrollbarX = context.scrollbarX) === null || _context$scrollbarX === void 0 ? void 0 : _context$scrollbarX.offsetHeight) || 0;\n    context.onCornerHeightChange(height);\n    setHeight(height);\n  });\n  $57acba87d6e25586$var$useResizeObserver(context.scrollbarY, function () {\n    var _context$scrollbarY;\n    var width = ((_context$scrollbarY = context.scrollbarY) === null || _context$scrollbarY === void 0 ? void 0 : _context$scrollbarY.offsetWidth) || 0;\n    context.onCornerWidthChange(width);\n    setWidth(width);\n  });\n  return hasSize ? /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({}, cornerProps, {\n    ref: forwardedRef,\n    style: _objectSpread({\n      width: width1,\n      height: height1,\n      position: 'absolute',\n      right: context.dir === 'ltr' ? 0 : undefined,\n      left: context.dir === 'rtl' ? 0 : undefined,\n      bottom: 0\n    }, props.style)\n  })) : null;\n});\n/* -----------------------------------------------------------------------------------------------*/\nfunction $57acba87d6e25586$var$toInt(value) {\n  return value ? parseInt(value, 10) : 0;\n}\nfunction $57acba87d6e25586$var$getThumbRatio(viewportSize, contentSize) {\n  var ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\nfunction $57acba87d6e25586$var$getThumbSize(sizes) {\n  var ratio = $57acba87d6e25586$var$getThumbRatio(sizes.viewport, sizes.content);\n  var scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  var thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio; // minimum of 18 matches macOS minimum\n  return Math.max(thumbSize, 18);\n}\nfunction $57acba87d6e25586$var$getScrollPositionFromPointer(pointerPos, pointerOffset, sizes) {\n  var dir = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ltr';\n  var thumbSizePx = $57acba87d6e25586$var$getThumbSize(sizes);\n  var thumbCenter = thumbSizePx / 2;\n  var offset = pointerOffset || thumbCenter;\n  var thumbOffsetFromEnd = thumbSizePx - offset;\n  var minPointerPos = sizes.scrollbar.paddingStart + offset;\n  var maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  var maxScrollPos = sizes.content - sizes.viewport;\n  var scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  var interpolate = $57acba87d6e25586$var$linearScale([minPointerPos, maxPointerPos], scrollRange);\n  return interpolate(pointerPos);\n}\nfunction $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes) {\n  var dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ltr';\n  var thumbSizePx = $57acba87d6e25586$var$getThumbSize(sizes);\n  var scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  var scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  var maxScrollPos = sizes.content - sizes.viewport;\n  var maxThumbPos = scrollbar - thumbSizePx;\n  var scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  var scrollWithoutMomentum = $fnFM9$clamp(scrollPos, scrollClampRange);\n  var interpolate = $57acba87d6e25586$var$linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n} // https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction $57acba87d6e25586$var$linearScale(input, output) {\n  return function (value) {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    var ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction $57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n} // Custom scroll handler to avoid scroll-linked effects\n// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\nvar $57acba87d6e25586$var$addUnlinkedScrollListener = function $57acba87d6e25586$var$addUnlinkedScrollListener(node) {\n  var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n  var prevPosition = {\n    left: node.scrollLeft,\n    top: node.scrollTop\n  };\n  var rAF = 0;\n  (function loop() {\n    var position = {\n      left: node.scrollLeft,\n      top: node.scrollTop\n    };\n    var isHorizontalScroll = prevPosition.left !== position.left;\n    var isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return function () {\n    return window.cancelAnimationFrame(rAF);\n  };\n};\nfunction $57acba87d6e25586$var$useDebounceCallback(callback, delay) {\n  var handleCallback = $fnFM9$useCallbackRef(callback);\n  var debounceTimerRef = $fnFM9$useRef(0);\n  $fnFM9$useEffect(function () {\n    return function () {\n      return window.clearTimeout(debounceTimerRef.current);\n    };\n  }, []);\n  return $fnFM9$useCallback(function () {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\nfunction $57acba87d6e25586$var$useResizeObserver(element, onResize) {\n  var handleResize = $fnFM9$useCallbackRef(onResize);\n  $fnFM9$useLayoutEffect(function () {\n    var rAF = 0;\n    if (element) {\n      /**\n      * Resize Observer will throw an often benign error that says `ResizeObserver loop\n      * completed with undelivered notifications`. This means that ResizeObserver was not\n      * able to deliver all observations within a single animation frame, so we use\n      * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n      * Further reading: https://github.com/WICG/resize-observer/issues/38\n      */\n      var resizeObserver = new ResizeObserver(function () {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return function () {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n/* -----------------------------------------------------------------------------------------------*/\nvar $57acba87d6e25586$export$be92b6f5f03c0fe9 = $57acba87d6e25586$export$ccf8d8d7bbf3c2cc;\nvar $57acba87d6e25586$export$d5c6c08dc2d3ca7 = $57acba87d6e25586$export$a21cbf9f11fca853;\nvar $57acba87d6e25586$export$9a4e88b92edfce6b = $57acba87d6e25586$export$2fabd85d0eba3c57;\nvar $57acba87d6e25586$export$6521433ed15a34db = $57acba87d6e25586$export$9fba1154677d7cd2;\nvar $57acba87d6e25586$export$ac61190d9fc311a9 = $57acba87d6e25586$export$56969d565df7cc4b;\nexport { $57acba87d6e25586$export$488468afe3a6f2b1 as createScrollAreaScope, $57acba87d6e25586$export$ccf8d8d7bbf3c2cc as ScrollArea, $57acba87d6e25586$export$a21cbf9f11fca853 as ScrollAreaViewport, $57acba87d6e25586$export$2fabd85d0eba3c57 as ScrollAreaScrollbar, $57acba87d6e25586$export$9fba1154677d7cd2 as ScrollAreaThumb, $57acba87d6e25586$export$56969d565df7cc4b as ScrollAreaCorner, $57acba87d6e25586$export$be92b6f5f03c0fe9 as Root, $57acba87d6e25586$export$d5c6c08dc2d3ca7 as Viewport, $57acba87d6e25586$export$9a4e88b92edfce6b as Scrollbar, $57acba87d6e25586$export$6521433ed15a34db as Thumb, $57acba87d6e25586$export$ac61190d9fc311a9 as Corner };","map":null,"metadata":{},"sourceType":"module"}