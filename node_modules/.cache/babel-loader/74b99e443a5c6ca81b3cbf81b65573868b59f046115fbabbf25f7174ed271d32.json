{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return node instanceof getWindow(node).ShadowRoot || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const safari = isSafari();\n  const css = getComputedStyle$1(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !safari && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !safari && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction isSafari() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isSafari() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isSafari();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","element","getComputedStyle","isNode","value","Node","getNodeName","nodeName","toLowerCase","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","safari","isSafari","css","transform","perspective","containerType","backdropFilter","filter","some","willChange","contain","CSS","supports","isLastTraversableNode","min","Math","max","round","floor","createCoords","v","x","y","getCssDimensions","width","parseFloat","height","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","isElement","Element","unwrapElement","contextElement","getScale","domElement","rect","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","win","visualViewport","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","offsetParent","clientRect","scale","visualOffsets","left","top","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getDocumentElement","_ref","document","documentElement","convertOffsetParentRelativeRectToViewportRelativeRect","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","getClientRects","Array","from","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","right","bottom","getDimensions","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getContainingBlock","getOffsetParent","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","isRTL","platform","observeMove","onMove","io","timeoutId","root","cleanup","clearTimeout","disconnect","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","rootMargin","options","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","e","observe","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","frameId","prevRefRect","frameLoop","nextRefRect","removeEventListener","Map","mergedOptions","platformWithCache"],"sources":["F:/Dairy Project/dairy_management/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return node instanceof getWindow(node).ShadowRoot || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const safari = isSafari();\n  const css = getComputedStyle$1(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !safari && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !safari && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction isSafari() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isSafari() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isSafari();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}