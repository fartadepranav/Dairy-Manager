{"ast":null,"code":"import React from 'react';\nimport { Global } from '@emotion/react';\nimport { rem, em } from './utils/rem/rem.js';\nfunction assignSizeVariables(variables, sizes, name, targetUnitConverter = rem) {\n  Object.keys(sizes).forEach(size => {\n    variables[`--mantine-${name}-${size}`] = targetUnitConverter(sizes[size]);\n  });\n}\nfunction MantineCssVariables({\n  theme\n}) {\n  const variables = {\n    \"--mantine-color-white\": theme.white,\n    \"--mantine-color-black\": theme.black,\n    \"--mantine-transition-timing-function\": theme.transitionTimingFunction,\n    \"--mantine-line-height\": `${theme.lineHeight}`,\n    \"--mantine-font-family\": theme.fontFamily,\n    \"--mantine-font-family-monospace\": theme.fontFamilyMonospace,\n    \"--mantine-font-family-headings\": theme.headings.fontFamily,\n    \"--mantine-heading-font-weight\": `${theme.headings.fontWeight}`\n  };\n  assignSizeVariables(variables, theme.shadows, \"shadow\");\n  assignSizeVariables(variables, theme.fontSizes, \"font-size\");\n  assignSizeVariables(variables, theme.radius, \"radius\");\n  assignSizeVariables(variables, theme.spacing, \"spacing\");\n  assignSizeVariables(variables, theme.breakpoints, \"breakpoints\", em);\n  Object.keys(theme.colors).forEach(color => {\n    theme.colors[color].forEach((shade, index) => {\n      variables[`--mantine-color-${color}-${index}`] = shade;\n    });\n  });\n  const headings = theme.headings.sizes;\n  Object.keys(headings).forEach(heading => {\n    variables[`--mantine-${heading}-font-size`] = headings[heading].fontSize;\n    variables[`--mantine-${heading}-line-height`] = `${headings[heading].lineHeight}`;\n  });\n  return /* @__PURE__ */React.createElement(Global, {\n    styles: {\n      \":root\": variables\n    }\n  });\n}\nexport { MantineCssVariables };","map":{"version":3,"names":["assignSizeVariables","variables","sizes","name","targetUnitConverter","rem","Object","keys","forEach","size","MantineCssVariables","theme","white","black","transitionTimingFunction","lineHeight","fontFamily","fontFamilyMonospace","headings","fontWeight","shadows","fontSizes","radius","spacing","breakpoints","em","colors","color","shade","index","heading","fontSize","React","createElement","Global","styles"],"sources":["F:\\Dairy Project\\dairy_management\\node_modules\\@mantine\\styles\\src\\theme\\MantineCssVariables.tsx"],"sourcesContent":["import React from 'react';\nimport { Global } from '@emotion/react';\nimport type { MantineTheme, MantineSize } from './types';\nimport { rem, em } from './utils';\n\nfunction assignSizeVariables(\n  variables: Record<string, string>,\n  sizes: Record<MantineSize, number | string>,\n  name: string,\n  targetUnitConverter: typeof rem = rem\n) {\n  Object.keys(sizes).forEach((size) => {\n    // eslint-disable-next-line no-param-reassign\n    variables[`--mantine-${name}-${size}`] = targetUnitConverter(sizes[size]);\n  });\n}\n\nexport function MantineCssVariables({ theme }: { theme: MantineTheme }) {\n  const variables: Record<string, string> = {\n    '--mantine-color-white': theme.white,\n    '--mantine-color-black': theme.black,\n    '--mantine-transition-timing-function': theme.transitionTimingFunction,\n    '--mantine-line-height': `${theme.lineHeight}`,\n    '--mantine-font-family': theme.fontFamily,\n    '--mantine-font-family-monospace': theme.fontFamilyMonospace,\n    '--mantine-font-family-headings': theme.headings.fontFamily,\n    '--mantine-heading-font-weight': `${theme.headings.fontWeight}`,\n  };\n\n  assignSizeVariables(variables, theme.shadows, 'shadow');\n  assignSizeVariables(variables, theme.fontSizes, 'font-size');\n  assignSizeVariables(variables, theme.radius, 'radius');\n  assignSizeVariables(variables, theme.spacing, 'spacing');\n  assignSizeVariables(variables, theme.breakpoints, 'breakpoints', em);\n\n  Object.keys(theme.colors).forEach((color) => {\n    theme.colors[color].forEach((shade, index) => {\n      variables[`--mantine-color-${color}-${index}`] = shade;\n    });\n  });\n\n  const headings = theme.headings.sizes;\n\n  Object.keys(headings).forEach((heading) => {\n    variables[`--mantine-${heading}-font-size`] = headings[heading].fontSize;\n    variables[`--mantine-${heading}-line-height`] = `${headings[heading].lineHeight}`;\n  });\n\n  return (\n    <Global\n      styles={{\n        ':root': variables,\n      }}\n    />\n  );\n}\n"],"mappings":";;;AAGA,SAASA,mBAAmBA,CAACC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,mBAAmB,GAAGC,GAAG,EAAE;EAC9EC,MAAM,CAACC,IAAI,CAACL,KAAK,CAAC,CAACM,OAAO,CAAEC,IAAI,IAAK;IACnCR,SAAS,CAAE,aAAYE,IAAK,IAAGM,IAAK,EAAC,CAAC,GAAGL,mBAAmB,CAACF,KAAK,CAACO,IAAI,CAAC,CAAC;EAC7E,CAAG,CAAC;AACJ;AACO,SAASC,mBAAmBA,CAAC;EAAEC;AAAK,CAAE,EAAE;EAC7C,MAAMV,SAAS,GAAG;IAChB,uBAAuB,EAAEU,KAAK,CAACC,KAAK;IACpC,uBAAuB,EAAED,KAAK,CAACE,KAAK;IACpC,sCAAsC,EAAEF,KAAK,CAACG,wBAAwB;IACtE,uBAAuB,EAAG,GAAEH,KAAK,CAACI,UAAW,EAAC;IAC9C,uBAAuB,EAAEJ,KAAK,CAACK,UAAU;IACzC,iCAAiC,EAAEL,KAAK,CAACM,mBAAmB;IAC5D,gCAAgC,EAAEN,KAAK,CAACO,QAAQ,CAACF,UAAU;IAC3D,+BAA+B,EAAG,GAAEL,KAAK,CAACO,QAAQ,CAACC,UAAW;EAClE,CAAG;EACDnB,mBAAmB,CAACC,SAAS,EAAEU,KAAK,CAACS,OAAO,EAAE,QAAQ,CAAC;EACvDpB,mBAAmB,CAACC,SAAS,EAAEU,KAAK,CAACU,SAAS,EAAE,WAAW,CAAC;EAC5DrB,mBAAmB,CAACC,SAAS,EAAEU,KAAK,CAACW,MAAM,EAAE,QAAQ,CAAC;EACtDtB,mBAAmB,CAACC,SAAS,EAAEU,KAAK,CAACY,OAAO,EAAE,SAAS,CAAC;EACxDvB,mBAAmB,CAACC,SAAS,EAAEU,KAAK,CAACa,WAAW,EAAE,aAAa,EAAEC,EAAE,CAAC;EACpEnB,MAAM,CAACC,IAAI,CAACI,KAAK,CAACe,MAAM,CAAC,CAAClB,OAAO,CAAEmB,KAAK,IAAK;IAC3ChB,KAAK,CAACe,MAAM,CAACC,KAAK,CAAC,CAACnB,OAAO,CAAC,CAACoB,KAAK,EAAEC,KAAK,KAAK;MAC5C5B,SAAS,CAAE,mBAAkB0B,KAAM,IAAGE,KAAM,EAAC,CAAC,GAAGD,KAAK;IAC5D,CAAK,CAAC;EACN,CAAG,CAAC;EACF,MAAMV,QAAQ,GAAGP,KAAK,CAACO,QAAQ,CAAChB,KAAK;EACrCI,MAAM,CAACC,IAAI,CAACW,QAAQ,CAAC,CAACV,OAAO,CAAEsB,OAAO,IAAK;IACzC7B,SAAS,CAAE,aAAY6B,OAAQ,YAAW,CAAC,GAAGZ,QAAQ,CAACY,OAAO,CAAC,CAACC,QAAQ;IACxE9B,SAAS,CAAE,aAAY6B,OAAQ,cAAa,CAAC,GAAI,GAAEZ,QAAQ,CAACY,OAAO,CAAC,CAACf,UAAW,EAAC;EACrF,CAAG,CAAC;EACF,sBAAuBiB,KAAK,CAACC,aAAa,CAACC,MAAM,EAAE;IACjDC,MAAM,EAAE;MACN,OAAO,EAAElC;IACf;EACA,CAAG,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}